===== Config file =====
[board_pins manta_m8p_tmc2209]
aliases = 
	
	x_step_pin=PE2,    x_dir_pin=PB4,    x_enable_pin=PC11,   x_uart_pin=PC10,   x_diag_pin=PF3,    x_endstop_pin=PF3,
	y_step_pin=PF12,   y_dir_pin=PF11,   y_enable_pin=PB3,    y_uart_pin=PF13,   y_diag_pin=PF4,    y_endstop_pin=PF4,
	z0_step_pin=PA10,  z0_dir_pin=PD15,  z0_enable_pin=PA15,  z0_uart_pin=PF8,   z0_diag_pin=null,
	z1_step_pin=PD12,  z1_dir_pin=PD11,  z1_enable_pin=PD14,  z1_uart_pin=PD13,  z1_diag_pin=null,
	z2_step_pin=PD10,  z2_dir_pin=PD8,   z2_enable_pin=PD9,   z2_uart_pin=PC7,   z2_diag_pin=null,
	z3_step_pin=PE6,	 z3_dir_pin=PC13,	 z3_enable_pin=PE5,	  z3_uart_pin=PC14,   z3_diag_pin=null,
	e_step_pin=PD7,    e_dir_pin=PD6,    e_enable_pin=PF10,   e_uart_pin=PF9,    e_diag_pin=null,   e_heater_pin=PE3,  e_sensor_pin=PA1,
	stepper_spi_mosi_pin=PA7,  stepper_spi_miso_pin=PA6,  stepper_spi_sclk_pin=PA5,
	
	adxl345_cs_pin=PB15,
	
	bltouch_sensor_pin=PB2,  bltouch_control_pin=PB1,
	probe_pin=PB2,
	
	fan_part_cooling_pin=PE6,
	fan_toolhead_cooling_pin=PE0,
	fan_controller_board_pin=PC12,
	
	heater_bed_heating_pin=PB7,
	heater_bed_sensor_pin=PA0 ,
	
	
	
	EXP1_1=PE9, EXP1_2=PE10,
	EXP1_3=PE11, EXP1_4=PE12,
	EXP1_5=PE13, EXP1_6=PE14,
	EXP1_7=PE15, EXP1_8=PB10,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	
	EXP2_1=PB14, EXP2_2=PB13,
	EXP2_3=PF7, EXP2_4=PB12,
	EXP2_5=PE7, EXP2_6=PB11,
	EXP2_7=PE8, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=PC5

[mcu]
baud = 250000
serial = /dev/btt-manta-m8p

[temperature_sensor Manta_M8P]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[adxl345]
spi_software_mosi_pin = stepper_spi_mosi_pin
spi_software_miso_pin = stepper_spi_miso_pin
spi_software_sclk_pin = stepper_spi_sclk_pin
cs_pin = adxl345_cs_pin

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[temperature_sensor raspberry_pi]
sensor_type = temperature_host

[skew_correction]

[input_shaper]

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[heater_bed]
heater_pin = heater_bed_heating_pin
sensor_pin = heater_bed_sensor_pin
sensor_type = Generic 3950
min_temp = 0
max_temp = 120
pwm_cycle_time = 0.02
control = pid
pid_kp = 22.2
pid_ki = 1.08
pid_kd = 114

[fan]
pin = fan_part_cooling_pin
shutdown_speed = 1.0

[heater_fan toolhead_cooling_fan]
pin = fan_toolhead_cooling_pin
fan_speed = 1

[controller_fan controller_fan]
pin = fan_controller_board_pin

[printer]
kinematics = corexy
max_velocity = 1000
max_accel = 15000
max_accel_to_decel = 7500
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[homing_override]
set_position_z = -5
axes = xyz
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_hop = printer["gcode_macro RatOS"].homing_z_hop|float %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	
	M400
	G90
	G0 Z{z_hop} F{z_speed}
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_raise_error("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_raise_error("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_speed}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config["tmc2209 stepper_x"].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config["tmc2209 stepper_y"].run_current}
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config["tmc2209 stepper_x"].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config["tmc2209 stepper_y"].run_current}
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro RatOS]
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_nozzle_priming = "primeblob"
variable_nozzle_prime_start_x = "max"
variable_nozzle_prime_start_y = "min"
variable_nozzle_prime_direction = "auto"
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_start_print_heat_chamber_bed_temp = 115
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 300
variable_macro_z_speed = 10
variable_end_print_park_z_hop = 20
variable_homing = "endstops"
variable_homing_z_hop = 25
variable_sensorless_x_current = 0.6
variable_sensorless_y_current = 0.9
variable_z_probe = "stowable"
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
gcode = 
	ECHO_RATOS_VARS
variable_stowable_probe_position_preflight = [ 30, 60 ]
variable_stowable_probe_position_side = [  13, 60 ]
variable_stowable_probe_position_dock = [   13, 6.5 ]
variable_stowable_probe_position_exit = [   60, 6.5 ]
variable_stowable_probe_batch_mode_enabled = False
variable_stowable_probe_state = None
variable_homing_x = "endstop"
variable_homing_y = "endstop"

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = printer.toolhead.axis_minimum.x + 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = printer.toolhead.axis_minimum.x + 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 F60 E20
	
	M106 S102
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_BED_MESH
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	M117 Pre-heating extruder...
	
	
	M104 S150
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM=150
	{% endif %}
	M117 Adjusting for tilt...
	
	Z_TILT_ADJUST
	M117 Rehoming after tilt adjustment...
	
	G28 Z

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CALIBRATE PROFILE=ratos
	{% endif %}
	BED_MESH_PROFILE LOAD=ratos

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	SAVE_GCODE_STATE NAME=end_print_state
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	M117 Done :)
	RESPOND MSG="Done :)"
	RESTORE_GCODE_STATE NAME=end_print_state

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_shell_command delete_and_restore_printer_data_dirs]
command = /home/pi/printer_data/config/RatOS/scripts/delete-and-restore-printer-data.sh
timeout = 10.

[gcode_macro DELETE_AND_RESTORE_PRINTER_DATA_DIRS]
gcode = 
	RUN_SHELL_COMMAND CMD=delete_and_restore_printer_data_dirs

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[stepper_x]
step_pin = x_step_pin
dir_pin = x_dir_pin
enable_pin = !x_enable_pin
rotation_distance = 40
microsteps = 64
homing_speed = 50
homing_retract_dist = 5.0
position_max = 300
position_endstop = 0
endstop_pin = ^x_endstop_pin

[stepper_y]
step_pin = y_step_pin
dir_pin = y_dir_pin
enable_pin = !y_enable_pin
rotation_distance = 40
microsteps = 64
homing_speed = 50
homing_retract_dist = 5.0
position_max = 300
position_endstop = 300
endstop_pin = ^y_endstop_pin
homing_positive_dir = true

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = z0_step_pin
dir_pin = !z0_dir_pin
enable_pin = !z0_enable_pin
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 300

[stepper_z1]
step_pin = z1_step_pin
dir_pin = !z1_dir_pin
enable_pin = !z1_enable_pin
rotation_distance = 4
microsteps = 64

[stepper_z2]
step_pin = z2_step_pin
dir_pin = !z2_dir_pin
enable_pin = !z2_enable_pin
rotation_distance = 4
microsteps = 64

[extruder]
step_pin = e_step_pin
dir_pin = !e_dir_pin
enable_pin = !e_enable_pin
microsteps = 16
rotation_distance = 22.67895
gear_ratio = 50:8
full_steps_per_rotation = 200
max_extrude_only_distance = 200
max_extrude_only_velocity = 75.0
max_extrude_only_accel = 1500
filament_diameter = 1.750
nozzle_diameter = 0.4
heater_pin = e_heater_pin
sensor_type = ATC Semitec 104GT-2
sensor_pin = e_sensor_pin
min_extrude_temp = 170
min_temp = 0
max_temp = 285
pressure_advance = 0.03
control = pid
pid_kp = 28.413
pid_ki = 1.334
pid_kd = 151.300

[bed_mesh]
speed = 300
horizontal_move_z = 5
mesh_min = 20,20
mesh_max = 265,260
probe_count = 7,7
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 300
z_positions = 
	0,0
	150,300
	300,0
points = 
	60,60
	185,270
	260,60
horizontal_move_z = 20
retries = 10
retry_tolerance = 0.02

[tmc2209 stepper_x]
stealthchop_threshold = 0
interpolate = False
uart_pin = x_uart_pin
run_current = 1.6
driver_tbl = 2
driver_toff = 3
driver_hend = 0
driver_hstrt = 6

[tmc2209 stepper_y]
stealthchop_threshold = 0
interpolate = False
uart_pin = y_uart_pin
run_current = 1.6
driver_tbl = 2
driver_toff = 3
driver_hend = 0
driver_hstrt = 6

[tmc2209 extruder]
uart_pin = e_uart_pin
run_current = 0.35
stealthchop_threshold = 0
interpolate = True

[tmc2209 stepper_z]
stealthchop_threshold = 0
interpolate = False
uart_pin = z0_uart_pin
run_current = 1.6
driver_tbl = 2
driver_toff = 3
driver_hend = 0
driver_hstrt = 6

[tmc2209 stepper_z1]
stealthchop_threshold = 0
interpolate = False
uart_pin = z1_uart_pin
run_current = 1.6
driver_tbl = 2
driver_toff = 3
driver_hend = 0
driver_hstrt = 6

[tmc2209 stepper_z2]
stealthchop_threshold = 0
interpolate = False
uart_pin = z2_uart_pin
run_current = 1.6
driver_tbl = 2
driver_toff = 3
driver_hend = 0
driver_hstrt = 6

[gcode_macro _ASSERT_PROBE_STATE]
description = ensures probe is in a known state; QUERY_PROBE must have been called before this macro!
gcode = 
	
	
	
	{% set last_query_state = "stowed" if printer.probe.last_query == 1 else "deployed" %}
	
	{% if params.MUST_BE != last_query_state %}
	{ action_raise_error("expected probe state to be {} but is {} ({})".format(params.MUST_BE, last_query_state, printer.probe.last_query)) }
	{% else %}
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_state VALUE="'{ last_query_state }'"
	{% endif %}

[gcode_macro ASSERT_PROBE_DEPLOYED]
description = error if probe not deployed
gcode = 
	M400
	G4 P100
	
	QUERY_PROBE
	_ASSERT_PROBE_STATE MUST_BE=deployed

[gcode_macro ASSERT_PROBE_STOWED]
description = error if probe not stowed
gcode = 
	M400
	G4 P100
	
	QUERY_PROBE
	_ASSERT_PROBE_STATE MUST_BE=stowed

[gcode_macro STOWABLE_PROBE_BEGIN_BATCH]
description = Begin stowable probe batch mode
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_batch_mode_enabled VALUE=True
	RESPOND TYPE=command MSG="Probe batch mode enabled"

[gcode_macro STOWABLE_PROBE_END_BATCH]
description = End stowable probe batch mode and stow probe
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_batch_mode_enabled VALUE=False
	RESPOND TYPE=command MSG="Probe batch mode disabled"
	STOW_PROBE

[gcode_macro DEPLOY_PROBE]
description = Deploy a stowable probe
gcode = 
	{% set RatOS = printer["gcode_macro RatOS"] %}
	{% set speed = RatOS.macro_travel_speed * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% if RatOS.stowable_probe_batch_mode_enabled and RatOS.stowable_probe_state == "deployed" %}
	RESPOND TYPE=command MSG="Probe batch mode enabled: already deployed"
	{% else %}
	RESPOND TYPE=command MSG="Deploying probe"
	
	ASSERT_PROBE_STOWED
	
	G90
	
	G0 Z{ RatOS.homing_z_hop } F{z_speed}
	
	G0 X{ RatOS.stowable_probe_position_preflight[0] } Y{ RatOS.stowable_probe_position_preflight[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_side[0] } Y{ RatOS.stowable_probe_position_side[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_dock[0] } Y{ RatOS.stowable_probe_position_dock[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_exit[0] } Y{ RatOS.stowable_probe_position_exit[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_preflight[0] } Y{ RatOS.stowable_probe_position_preflight[1] } F{ speed }
	
	ASSERT_PROBE_DEPLOYED
	
	{% endif %}

[gcode_macro STOW_PROBE]
description = Stow a stowable probe
gcode = 
	{% set RatOS = printer["gcode_macro RatOS"] %}
	{% set speed = RatOS.macro_travel_speed * 60 %}
	
	{% if RatOS.stowable_probe_batch_mode_enabled %}
	RESPOND TYPE=command MSG="Probe batch mode enabled: not stowing"
	{% else %}
	RESPOND TYPE=command MSG="Stowing probe"
	
	ASSERT_PROBE_DEPLOYED
	
	G90
	
	G0 Z{ RatOS.homing_z_hop } F3000
	
	G0 X{ RatOS.stowable_probe_position_preflight[0] } Y{ RatOS.stowable_probe_position_preflight[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_exit[0] } Y{ RatOS.stowable_probe_position_exit[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_dock[0] } Y{ RatOS.stowable_probe_position_dock[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_side[0] } Y{ RatOS.stowable_probe_position_side[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_preflight[0] } Y{ RatOS.stowable_probe_position_preflight[1] } F{ speed }
	
	ASSERT_PROBE_STOWED
	{% endif %}

[gcode_macro BED_MESH_CALIBRATE]
rename_existing = BED_MESH_CALIBRATE_ORIG
gcode = 
	{% set args = [] %}
	{% for p in params %}
	{% set tmp = args.append('%s=%s' % (p, params[p])) %}
	{% endfor %}
	DEPLOY_PROBE
	BED_MESH_CALIBRATE_ORIG {args|join(' ')}
	STOW_PROBE

[gcode_macro PROBE_CALIBRATE]
rename_existing = PROBE_CALIBRATE_ORIG
gcode = 
	{% set args = [] %}
	{% for p in params %}
	{% set tmp = args.append('%s=%s' % (p, params[p])) %}
	{% endfor %}
	{% set RatOS = printer["gcode_macro RatOS"] %}
	{% set speed = RatOS.macro_travel_speed * 60 %}
	DEPLOY_PROBE
	G90
	G0 X{ printer.toolhead.axis_maximum.x/2 } Y{ printer.toolhead.axis_maximum.y/2 } F{ speed }
	PROBE_CALIBRATE_ORIG {args|join(' ')}
	SAVE_GCODE_STATE name=probe_calibrate
	STOW_PROBE
	RESTORE_GCODE_STATE name=probe_calibrate MOVE=1 MOVE_SPEED={RatOS.macro_travel_speed|float}

[gcode_macro PROBE_ACCURACY]
rename_existing = PROBE_ACCURACY_ORIG
gcode = 
	{% set args = [] %}
	{% for p in params %}
	{% set tmp = args.append('%s=%s' % (p, params[p])) %}
	{% endfor %}
	ASSERT_PROBE_DEPLOYED
	PROBE_ACCURACY_ORIG {args|join(' ')}

[probe]
pin = ^probe_pin
x_offset = -26.96
y_offset = -25.4
speed = 5
lift_speed = 15
samples = 4
sample_retract_dist = 1.0
z_offset = 0.0

[firmware_retraction]
retract_speed = 60
unretract_extra_length = 0
unretract_speed = 60
retract_length = 0.5
=======================
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/printer_data/config/printer.cfg', '-l', '/home/pi/printer_data/logs/klippy.log', '-I', '/home/pi/printer_data/comms/klippy.serial', '-a', '/home/pi/printer_data/comms/klippy.sock']
Git version: 'v0.11.0-86-g6026a99a'
CPU: 4 core ?
Python: '3.9.2 (default, Feb 28 2021, 17:03:44) \n[GCC 10.2.1 20210110]'
webhooks client 281472964046752: {'program': 'Moonraker', 'version': 'v0.7.1-809-gc964e68'}
=============== Log rollover at Fri Jan 20 06:44:15 2023 ===============
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
MCU error during connect
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/mcu.py", line 777, in _mcu_identify
    self._serial.connect_uart(self._serialport, self._baud, rts)
  File "/home/pi/klipper/klippy/serialhdl.py", line 182, in connect_uart
    self._error("Unable to connect")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Unable to connect

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 176, in _connect
    self.send_event("klippy:mcu_identify")
  File "/home/pi/klipper/klippy/klippy.py", line 263, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/klippy.py", line 263, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/mcu.py", line 782, in _mcu_identify
    raise error(str(e))
mcu.error: mcu 'mcu': Unable to connect
Build file /home/pi/klipper/klippy/../.config(669): Thu Jan 19 09:01:08 2023
========= Last MCU build config =========
# CONFIG_LOW_LEVEL_OPTIONS is not set
# CONFIG_MACH_AVR is not set
# CONFIG_MACH_ATSAM is not set
# CONFIG_MACH_ATSAMD is not set
# CONFIG_MACH_LPC176X is not set
# CONFIG_MACH_STM32 is not set
# CONFIG_MACH_RP2040 is not set
# CONFIG_MACH_PRU is not set
CONFIG_MACH_LINUX=y
# CONFIG_MACH_SIMU is not set
CONFIG_STEP_DELAY=2
CONFIG_BOARD_DIRECTORY="linux"
CONFIG_CLOCK_FREQ=50000000
CONFIG_LINUX_SELECT=y
CONFIG_USB_VENDOR_ID=0x1d50
CONFIG_USB_DEVICE_ID=0x614e
CONFIG_USB_SERIAL_NUMBER="12345"
CONFIG_HAVE_GPIO=y
CONFIG_HAVE_GPIO_ADC=y
CONFIG_HAVE_GPIO_SPI=y
CONFIG_HAVE_GPIO_I2C=y
CONFIG_HAVE_GPIO_HARD_PWM=y
CONFIG_HAVE_GPIO_BITBANGING=y
CONFIG_INLINE_STEPPER_HACK=y
=======================
Build file /home/pi/klipper/klippy/../out/klipper.dict(9214): Thu Jan 19 09:00:40 2023
Last MCU build version: v0.11.0-86-g6026a99a
Last MCU build tools: gcc: (Debian 10.2.1-6) 10.2.1 20210110 binutils: (GNU Binutils for Debian) 2.35.2
Last MCU build config: ADC_MAX=4095 CLOCK_FREQ=50000000 MCU=linux PCA9685_MAX=4096 PWM_MAX=32768 STATS_SUMSQ_BASE=256
Build file /home/pi/klipper/klippy/../out/klipper.elf(817776): Thu Jan 19 09:01:01 2023
Attempting MCU 'mcu' reset
Unhandled exception during post run
Traceback (most recent call last):
  File "/home/pi/klippy-env/lib/python3.9/site-packages/serial/serialposix.py", line 265, in open
    self.fd = os.open(self.portstr, os.O_RDWR | os.O_NOCTTY | os.O_NONBLOCK)
FileNotFoundError: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 234, in run
    self.send_event("klippy:firmware_restart")
  File "/home/pi/klipper/klippy/klippy.py", line 263, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/klippy.py", line 263, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/mcu.py", line 931, in _firmware_restart
    self._restart_arduino()
  File "/home/pi/klipper/klippy/mcu.py", line 891, in _restart_arduino
    serialhdl.arduino_reset(self._serialport, self._reactor)
  File "/home/pi/klipper/klippy/serialhdl.py", line 379, in arduino_reset
    ser = serial.Serial(serialport, 2400, timeout=0, exclusive=True)
  File "/home/pi/klippy-env/lib/python3.9/site-packages/serial/serialutil.py", line 240, in __init__
    self.open()
  File "/home/pi/klippy-env/lib/python3.9/site-packages/serial/serialposix.py", line 268, in open
    raise SerialException(msg.errno, "could not open port {}: {}".format(self._port, msg))
serial.serialutil.SerialException: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
Restarting printer
Start printer at Fri Jan 20 06:57:43 2023 (1674197863.9 895.1)
===== Config file =====
[board_pins manta_m8p_tmc2209]
aliases = 
	
	x_step_pin=PE2,    x_dir_pin=PB4,    x_enable_pin=PC11,   x_uart_pin=PC10,   x_diag_pin=PF3,    x_endstop_pin=PF3,
	y_step_pin=PF12,   y_dir_pin=PF11,   y_enable_pin=PB3,    y_uart_pin=PF13,   y_diag_pin=PF4,    y_endstop_pin=PF4,
	z0_step_pin=PA10,  z0_dir_pin=PD15,  z0_enable_pin=PA15,  z0_uart_pin=PF8,   z0_diag_pin=null,
	z1_step_pin=PD12,  z1_dir_pin=PD11,  z1_enable_pin=PD14,  z1_uart_pin=PD13,  z1_diag_pin=null,
	z2_step_pin=PD10,  z2_dir_pin=PD8,   z2_enable_pin=PD9,   z2_uart_pin=PC7,   z2_diag_pin=null,
	z3_step_pin=PE6,	 z3_dir_pin=PC13,	 z3_enable_pin=PE5,	  z3_uart_pin=PC14,   z3_diag_pin=null,
	e_step_pin=PD7,    e_dir_pin=PD6,    e_enable_pin=PF10,   e_uart_pin=PF9,    e_diag_pin=null,   e_heater_pin=PE3,  e_sensor_pin=PA1,
	stepper_spi_mosi_pin=PA7,  stepper_spi_miso_pin=PA6,  stepper_spi_sclk_pin=PA5,
	
	adxl345_cs_pin=PB15,
	
	bltouch_sensor_pin=PB2,  bltouch_control_pin=PB1,
	probe_pin=PB2,
	
	fan_part_cooling_pin=PE6,
	fan_toolhead_cooling_pin=PE0,
	fan_controller_board_pin=PC12,
	
	heater_bed_heating_pin=PB7,
	heater_bed_sensor_pin=PA0 ,
	
	
	
	EXP1_1=PE9, EXP1_2=PE10,
	EXP1_3=PE11, EXP1_4=PE12,
	EXP1_5=PE13, EXP1_6=PE14,
	EXP1_7=PE15, EXP1_8=PB10,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	
	EXP2_1=PB14, EXP2_2=PB13,
	EXP2_3=PF7, EXP2_4=PB12,
	EXP2_5=PE7, EXP2_6=PB11,
	EXP2_7=PE8, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=PC5

[mcu]
baud = 250000
serial = /dev/btt-manta-m8p

[temperature_sensor Manta_M8P]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[adxl345]
spi_software_mosi_pin = stepper_spi_mosi_pin
spi_software_miso_pin = stepper_spi_miso_pin
spi_software_sclk_pin = stepper_spi_sclk_pin
cs_pin = adxl345_cs_pin

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[temperature_sensor raspberry_pi]
sensor_type = temperature_host

[skew_correction]

[input_shaper]

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[heater_bed]
heater_pin = heater_bed_heating_pin
sensor_pin = heater_bed_sensor_pin
sensor_type = Generic 3950
min_temp = 0
max_temp = 120
pwm_cycle_time = 0.02
control = pid
pid_kp = 22.2
pid_ki = 1.08
pid_kd = 114

[fan]
pin = fan_part_cooling_pin
shutdown_speed = 1.0

[heater_fan toolhead_cooling_fan]
pin = fan_toolhead_cooling_pin
fan_speed = 1

[controller_fan controller_fan]
pin = fan_controller_board_pin

[printer]
kinematics = corexy
max_velocity = 1000
max_accel = 15000
max_accel_to_decel = 7500
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[homing_override]
set_position_z = -5
axes = xyz
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_hop = printer["gcode_macro RatOS"].homing_z_hop|float %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	
	M400
	G90
	G0 Z{z_hop} F{z_speed}
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_raise_error("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_raise_error("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_speed}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config["tmc2209 stepper_x"].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config["tmc2209 stepper_y"].run_current}
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config["tmc2209 stepper_x"].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config["tmc2209 stepper_y"].run_current}
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro RatOS]
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_nozzle_priming = "primeblob"
variable_nozzle_prime_start_x = "max"
variable_nozzle_prime_start_y = "min"
variable_nozzle_prime_direction = "auto"
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_start_print_heat_chamber_bed_temp = 115
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 300
variable_macro_z_speed = 10
variable_end_print_park_z_hop = 20
variable_homing = "endstops"
variable_homing_z_hop = 25
variable_sensorless_x_current = 0.6
variable_sensorless_y_current = 0.9
variable_z_probe = "stowable"
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
gcode = 
	ECHO_RATOS_VARS
variable_stowable_probe_position_preflight = [ 30, 60 ]
variable_stowable_probe_position_side = [  13, 60 ]
variable_stowable_probe_position_dock = [   13, 6.5 ]
variable_stowable_probe_position_exit = [   60, 6.5 ]
variable_stowable_probe_batch_mode_enabled = False
variable_stowable_probe_state = None
variable_homing_x = "endstop"
variable_homing_y = "endstop"

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = printer.toolhead.axis_minimum.x + 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = printer.toolhead.axis_minimum.x + 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 F60 E20
	
	M106 S102
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_BED_MESH
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	M117 Pre-heating extruder...
	
	
	M104 S150
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM=150
	{% endif %}
	M117 Adjusting for tilt...
	
	Z_TILT_ADJUST
	M117 Rehoming after tilt adjustment...
	
	G28 Z

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CALIBRATE PROFILE=ratos
	{% endif %}
	BED_MESH_PROFILE LOAD=ratos

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	SAVE_GCODE_STATE NAME=end_print_state
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	M117 Done :)
	RESPOND MSG="Done :)"
	RESTORE_GCODE_STATE NAME=end_print_state

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_shell_command delete_and_restore_printer_data_dirs]
command = /home/pi/printer_data/config/RatOS/scripts/delete-and-restore-printer-data.sh
timeout = 10.

[gcode_macro DELETE_AND_RESTORE_PRINTER_DATA_DIRS]
gcode = 
	RUN_SHELL_COMMAND CMD=delete_and_restore_printer_data_dirs

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[stepper_x]
step_pin = x_step_pin
dir_pin = x_dir_pin
enable_pin = !x_enable_pin
rotation_distance = 40
microsteps = 64
homing_speed = 50
homing_retract_dist = 5.0
position_max = 300
position_endstop = 0
endstop_pin = ^x_endstop_pin

[stepper_y]
step_pin = y_step_pin
dir_pin = y_dir_pin
enable_pin = !y_enable_pin
rotation_distance = 40
microsteps = 64
homing_speed = 50
homing_retract_dist = 5.0
position_max = 300
position_endstop = 300
endstop_pin = ^y_endstop_pin
homing_positive_dir = true

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = z0_step_pin
dir_pin = !z0_dir_pin
enable_pin = !z0_enable_pin
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 300

[stepper_z1]
step_pin = z1_step_pin
dir_pin = !z1_dir_pin
enable_pin = !z1_enable_pin
rotation_distance = 4
microsteps = 64

[stepper_z2]
step_pin = z2_step_pin
dir_pin = !z2_dir_pin
enable_pin = !z2_enable_pin
rotation_distance = 4
microsteps = 64

[extruder]
step_pin = e_step_pin
dir_pin = !e_dir_pin
enable_pin = !e_enable_pin
microsteps = 16
rotation_distance = 22.67895
gear_ratio = 50:8
full_steps_per_rotation = 200
max_extrude_only_distance = 200
max_extrude_only_velocity = 75.0
max_extrude_only_accel = 1500
filament_diameter = 1.750
nozzle_diameter = 0.4
heater_pin = e_heater_pin
sensor_type = ATC Semitec 104GT-2
sensor_pin = e_sensor_pin
min_extrude_temp = 170
min_temp = 0
max_temp = 285
pressure_advance = 0.03
control = pid
pid_kp = 28.413
pid_ki = 1.334
pid_kd = 151.300

[bed_mesh]
speed = 300
horizontal_move_z = 5
mesh_min = 20,20
mesh_max = 265,260
probe_count = 7,7
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 300
z_positions = 
	0,0
	150,300
	300,0
points = 
	60,60
	185,270
	260,60
horizontal_move_z = 20
retries = 10
retry_tolerance = 0.02

[tmc2209 stepper_x]
stealthchop_threshold = 0
interpolate = False
uart_pin = x_uart_pin
run_current = 1.6
driver_tbl = 2
driver_toff = 3
driver_hend = 0
driver_hstrt = 6

[tmc2209 stepper_y]
stealthchop_threshold = 0
interpolate = False
uart_pin = y_uart_pin
run_current = 1.6
driver_tbl = 2
driver_toff = 3
driver_hend = 0
driver_hstrt = 6

[tmc2209 extruder]
uart_pin = e_uart_pin
run_current = 0.35
stealthchop_threshold = 0
interpolate = True

[tmc2209 stepper_z]
stealthchop_threshold = 0
interpolate = False
uart_pin = z0_uart_pin
run_current = 1.6
driver_tbl = 2
driver_toff = 3
driver_hend = 0
driver_hstrt = 6

[tmc2209 stepper_z1]
stealthchop_threshold = 0
interpolate = False
uart_pin = z1_uart_pin
run_current = 1.6
driver_tbl = 2
driver_toff = 3
driver_hend = 0
driver_hstrt = 6

[tmc2209 stepper_z2]
stealthchop_threshold = 0
interpolate = False
uart_pin = z2_uart_pin
run_current = 1.6
driver_tbl = 2
driver_toff = 3
driver_hend = 0
driver_hstrt = 6

[gcode_macro _ASSERT_PROBE_STATE]
description = ensures probe is in a known state; QUERY_PROBE must have been called before this macro!
gcode = 
	
	
	
	{% set last_query_state = "stowed" if printer.probe.last_query == 1 else "deployed" %}
	
	{% if params.MUST_BE != last_query_state %}
	{ action_raise_error("expected probe state to be {} but is {} ({})".format(params.MUST_BE, last_query_state, printer.probe.last_query)) }
	{% else %}
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_state VALUE="'{ last_query_state }'"
	{% endif %}

[gcode_macro ASSERT_PROBE_DEPLOYED]
description = error if probe not deployed
gcode = 
	M400
	G4 P100
	
	QUERY_PROBE
	_ASSERT_PROBE_STATE MUST_BE=deployed

[gcode_macro ASSERT_PROBE_STOWED]
description = error if probe not stowed
gcode = 
	M400
	G4 P100
	
	QUERY_PROBE
	_ASSERT_PROBE_STATE MUST_BE=stowed

[gcode_macro STOWABLE_PROBE_BEGIN_BATCH]
description = Begin stowable probe batch mode
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_batch_mode_enabled VALUE=True
	RESPOND TYPE=command MSG="Probe batch mode enabled"

[gcode_macro STOWABLE_PROBE_END_BATCH]
description = End stowable probe batch mode and stow probe
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_batch_mode_enabled VALUE=False
	RESPOND TYPE=command MSG="Probe batch mode disabled"
	STOW_PROBE

[gcode_macro DEPLOY_PROBE]
description = Deploy a stowable probe
gcode = 
	{% set RatOS = printer["gcode_macro RatOS"] %}
	{% set speed = RatOS.macro_travel_speed * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% if RatOS.stowable_probe_batch_mode_enabled and RatOS.stowable_probe_state == "deployed" %}
	RESPOND TYPE=command MSG="Probe batch mode enabled: already deployed"
	{% else %}
	RESPOND TYPE=command MSG="Deploying probe"
	
	ASSERT_PROBE_STOWED
	
	G90
	
	G0 Z{ RatOS.homing_z_hop } F{z_speed}
	
	G0 X{ RatOS.stowable_probe_position_preflight[0] } Y{ RatOS.stowable_probe_position_preflight[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_side[0] } Y{ RatOS.stowable_probe_position_side[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_dock[0] } Y{ RatOS.stowable_probe_position_dock[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_exit[0] } Y{ RatOS.stowable_probe_position_exit[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_preflight[0] } Y{ RatOS.stowable_probe_position_preflight[1] } F{ speed }
	
	ASSERT_PROBE_DEPLOYED
	
	{% endif %}

[gcode_macro STOW_PROBE]
description = Stow a stowable probe
gcode = 
	{% set RatOS = printer["gcode_macro RatOS"] %}
	{% set speed = RatOS.macro_travel_speed * 60 %}
	
	{% if RatOS.stowable_probe_batch_mode_enabled %}
	RESPOND TYPE=command MSG="Probe batch mode enabled: not stowing"
	{% else %}
	RESPOND TYPE=command MSG="Stowing probe"
	
	ASSERT_PROBE_DEPLOYED
	
	G90
	
	G0 Z{ RatOS.homing_z_hop } F3000
	
	G0 X{ RatOS.stowable_probe_position_preflight[0] } Y{ RatOS.stowable_probe_position_preflight[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_exit[0] } Y{ RatOS.stowable_probe_position_exit[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_dock[0] } Y{ RatOS.stowable_probe_position_dock[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_side[0] } Y{ RatOS.stowable_probe_position_side[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_preflight[0] } Y{ RatOS.stowable_probe_position_preflight[1] } F{ speed }
	
	ASSERT_PROBE_STOWED
	{% endif %}

[gcode_macro BED_MESH_CALIBRATE]
rename_existing = BED_MESH_CALIBRATE_ORIG
gcode = 
	{% set args = [] %}
	{% for p in params %}
	{% set tmp = args.append('%s=%s' % (p, params[p])) %}
	{% endfor %}
	DEPLOY_PROBE
	BED_MESH_CALIBRATE_ORIG {args|join(' ')}
	STOW_PROBE

[gcode_macro PROBE_CALIBRATE]
rename_existing = PROBE_CALIBRATE_ORIG
gcode = 
	{% set args = [] %}
	{% for p in params %}
	{% set tmp = args.append('%s=%s' % (p, params[p])) %}
	{% endfor %}
	{% set RatOS = printer["gcode_macro RatOS"] %}
	{% set speed = RatOS.macro_travel_speed * 60 %}
	DEPLOY_PROBE
	G90
	G0 X{ printer.toolhead.axis_maximum.x/2 } Y{ printer.toolhead.axis_maximum.y/2 } F{ speed }
	PROBE_CALIBRATE_ORIG {args|join(' ')}
	SAVE_GCODE_STATE name=probe_calibrate
	STOW_PROBE
	RESTORE_GCODE_STATE name=probe_calibrate MOVE=1 MOVE_SPEED={RatOS.macro_travel_speed|float}

[gcode_macro PROBE_ACCURACY]
rename_existing = PROBE_ACCURACY_ORIG
gcode = 
	{% set args = [] %}
	{% for p in params %}
	{% set tmp = args.append('%s=%s' % (p, params[p])) %}
	{% endfor %}
	ASSERT_PROBE_DEPLOYED
	PROBE_ACCURACY_ORIG {args|join(' ')}

[probe]
pin = ^probe_pin
x_offset = -26.96
y_offset = -25.4
speed = 5
lift_speed = 15
samples = 4
sample_retract_dist = 1.0
z_offset = 0.0

[firmware_retraction]
retract_speed = 60
unretract_extra_length = 0
unretract_speed = 60
retract_length = 0.5
=======================
Extruder max_extrude_ratio=0.266081
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
webhooks client 281472964089936: New connection
webhooks client 281472964089936: Client info {'program': 'Moonraker', 'version': 'v0.7.1-809-gc964e68'}
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
MCU error during connect
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/mcu.py", line 777, in _mcu_identify
    self._serial.connect_uart(self._serialport, self._baud, rts)
  File "/home/pi/klipper/klippy/serialhdl.py", line 182, in connect_uart
    self._error("Unable to connect")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Unable to connect

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 176, in _connect
    self.send_event("klippy:mcu_identify")
  File "/home/pi/klipper/klippy/klippy.py", line 263, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/klippy.py", line 263, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/mcu.py", line 782, in _mcu_identify
    raise error(str(e))
mcu.error: mcu 'mcu': Unable to connect
Build file /home/pi/klipper/klippy/../.config(669): Thu Jan 19 09:01:08 2023
========= Last MCU build config =========
# CONFIG_LOW_LEVEL_OPTIONS is not set
# CONFIG_MACH_AVR is not set
# CONFIG_MACH_ATSAM is not set
# CONFIG_MACH_ATSAMD is not set
# CONFIG_MACH_LPC176X is not set
# CONFIG_MACH_STM32 is not set
# CONFIG_MACH_RP2040 is not set
# CONFIG_MACH_PRU is not set
CONFIG_MACH_LINUX=y
# CONFIG_MACH_SIMU is not set
CONFIG_STEP_DELAY=2
CONFIG_BOARD_DIRECTORY="linux"
CONFIG_CLOCK_FREQ=50000000
CONFIG_LINUX_SELECT=y
CONFIG_USB_VENDOR_ID=0x1d50
CONFIG_USB_DEVICE_ID=0x614e
CONFIG_USB_SERIAL_NUMBER="12345"
CONFIG_HAVE_GPIO=y
CONFIG_HAVE_GPIO_ADC=y
CONFIG_HAVE_GPIO_SPI=y
CONFIG_HAVE_GPIO_I2C=y
CONFIG_HAVE_GPIO_HARD_PWM=y
CONFIG_HAVE_GPIO_BITBANGING=y
CONFIG_INLINE_STEPPER_HACK=y
=======================
Build file /home/pi/klipper/klippy/../out/klipper.dict(9214): Thu Jan 19 09:00:40 2023
Last MCU build version: v0.11.0-86-g6026a99a
Last MCU build tools: gcc: (Debian 10.2.1-6) 10.2.1 20210110 binutils: (GNU Binutils for Debian) 2.35.2
Last MCU build config: ADC_MAX=4095 CLOCK_FREQ=50000000 MCU=linux PCA9685_MAX=4096 PWM_MAX=32768 STATS_SUMSQ_BASE=256
Build file /home/pi/klipper/klippy/../out/klipper.elf(817776): Thu Jan 19 09:01:01 2023
Attempting MCU 'mcu' reset
Unhandled exception during post run
Traceback (most recent call last):
  File "/home/pi/klippy-env/lib/python3.9/site-packages/serial/serialposix.py", line 265, in open
    self.fd = os.open(self.portstr, os.O_RDWR | os.O_NOCTTY | os.O_NONBLOCK)
FileNotFoundError: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 234, in run
    self.send_event("klippy:firmware_restart")
  File "/home/pi/klipper/klippy/klippy.py", line 263, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/klippy.py", line 263, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/mcu.py", line 931, in _firmware_restart
    self._restart_arduino()
  File "/home/pi/klipper/klippy/mcu.py", line 891, in _restart_arduino
    serialhdl.arduino_reset(self._serialport, self._reactor)
  File "/home/pi/klipper/klippy/serialhdl.py", line 379, in arduino_reset
    ser = serial.Serial(serialport, 2400, timeout=0, exclusive=True)
  File "/home/pi/klippy-env/lib/python3.9/site-packages/serial/serialutil.py", line 240, in __init__
    self.open()
  File "/home/pi/klippy-env/lib/python3.9/site-packages/serial/serialposix.py", line 268, in open
    raise SerialException(msg.errno, "could not open port {}: {}".format(self._port, msg))
serial.serialutil.SerialException: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
Restarting printer
Start printer at Fri Jan 20 06:59:39 2023 (1674197979.8 1011.0)
===== Config file =====
[mcu]
serial = /dev/btt-manta-m8p
baud = 250000

[board_pins manta_m8p_tmc2209]
aliases = 
	
	x_step_pin=PE2,    x_dir_pin=PB4,    x_enable_pin=PC11,   x_uart_pin=PC10,   x_diag_pin=PF3,    x_endstop_pin=PF3,
	y_step_pin=PF12,   y_dir_pin=PF11,   y_enable_pin=PB3,    y_uart_pin=PF13,   y_diag_pin=PF4,    y_endstop_pin=PF4,
	z0_step_pin=PA10,  z0_dir_pin=PD15,  z0_enable_pin=PA15,  z0_uart_pin=PF8,   z0_diag_pin=null,
	z1_step_pin=PD12,  z1_dir_pin=PD11,  z1_enable_pin=PD14,  z1_uart_pin=PD13,  z1_diag_pin=null,
	z2_step_pin=PD10,  z2_dir_pin=PD8,   z2_enable_pin=PD9,   z2_uart_pin=PC7,   z2_diag_pin=null,
	z3_step_pin=PE6,	 z3_dir_pin=PC13,	 z3_enable_pin=PE5,	  z3_uart_pin=PC14,   z3_diag_pin=null,
	e_step_pin=PD7,    e_dir_pin=PD6,    e_enable_pin=PF10,   e_uart_pin=PF9,    e_diag_pin=null,   e_heater_pin=PE3,  e_sensor_pin=PA1,
	stepper_spi_mosi_pin=PA7,  stepper_spi_miso_pin=PA6,  stepper_spi_sclk_pin=PA5,
	
	adxl345_cs_pin=PB15,
	
	bltouch_sensor_pin=PB2,  bltouch_control_pin=PB1,
	probe_pin=PB2,
	
	fan_part_cooling_pin=PE6,
	fan_toolhead_cooling_pin=PE0,
	fan_controller_board_pin=PC12,
	
	heater_bed_heating_pin=PB7,
	heater_bed_sensor_pin=PA0 ,
	
	
	
	EXP1_1=PE9, EXP1_2=PE10,
	EXP1_3=PE11, EXP1_4=PE12,
	EXP1_5=PE13, EXP1_6=PE14,
	EXP1_7=PE15, EXP1_8=PB10,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	
	EXP2_1=PB14, EXP2_2=PB13,
	EXP2_3=PF7, EXP2_4=PB12,
	EXP2_5=PE7, EXP2_6=PB11,
	EXP2_7=PE8, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=PC5

[temperature_sensor Manta_M8P]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[adxl345]
spi_software_mosi_pin = stepper_spi_mosi_pin
spi_software_miso_pin = stepper_spi_miso_pin
spi_software_sclk_pin = stepper_spi_sclk_pin
cs_pin = adxl345_cs_pin

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[temperature_sensor raspberry_pi]
sensor_type = temperature_host

[skew_correction]

[input_shaper]

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[heater_bed]
heater_pin = heater_bed_heating_pin
sensor_pin = heater_bed_sensor_pin
sensor_type = Generic 3950
min_temp = 0
max_temp = 120
pwm_cycle_time = 0.02
control = pid
pid_kp = 22.2
pid_ki = 1.08
pid_kd = 114

[fan]
pin = fan_part_cooling_pin
shutdown_speed = 1.0

[heater_fan toolhead_cooling_fan]
pin = fan_toolhead_cooling_pin
fan_speed = 1

[controller_fan controller_fan]
pin = fan_controller_board_pin

[printer]
kinematics = corexy
max_velocity = 1000
max_accel = 15000
max_accel_to_decel = 7500
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[homing_override]
set_position_z = -5
axes = xyz
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_hop = printer["gcode_macro RatOS"].homing_z_hop|float %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	
	M400
	G90
	G0 Z{z_hop} F{z_speed}
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_raise_error("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_raise_error("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_speed}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config["tmc2209 stepper_x"].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config["tmc2209 stepper_y"].run_current}
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config["tmc2209 stepper_x"].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config["tmc2209 stepper_y"].run_current}
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro RatOS]
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_nozzle_priming = "primeblob"
variable_nozzle_prime_start_x = "max"
variable_nozzle_prime_start_y = "min"
variable_nozzle_prime_direction = "auto"
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_start_print_heat_chamber_bed_temp = 115
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 300
variable_macro_z_speed = 10
variable_end_print_park_z_hop = 20
variable_homing = "endstops"
variable_homing_z_hop = 25
variable_sensorless_x_current = 0.6
variable_sensorless_y_current = 0.9
variable_z_probe = "stowable"
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
gcode = 
	ECHO_RATOS_VARS
variable_stowable_probe_position_preflight = [ 30, 60 ]
variable_stowable_probe_position_side = [  13, 60 ]
variable_stowable_probe_position_dock = [   13, 6.5 ]
variable_stowable_probe_position_exit = [   60, 6.5 ]
variable_stowable_probe_batch_mode_enabled = False
variable_stowable_probe_state = None
variable_homing_x = "endstop"
variable_homing_y = "endstop"

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = printer.toolhead.axis_minimum.x + 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = printer.toolhead.axis_minimum.x + 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 F60 E20
	
	M106 S102
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_BED_MESH
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	M117 Pre-heating extruder...
	
	
	M104 S150
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM=150
	{% endif %}
	M117 Adjusting for tilt...
	
	Z_TILT_ADJUST
	M117 Rehoming after tilt adjustment...
	
	G28 Z

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CALIBRATE PROFILE=ratos
	{% endif %}
	BED_MESH_PROFILE LOAD=ratos

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	SAVE_GCODE_STATE NAME=end_print_state
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	M117 Done :)
	RESPOND MSG="Done :)"
	RESTORE_GCODE_STATE NAME=end_print_state

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_shell_command delete_and_restore_printer_data_dirs]
command = /home/pi/printer_data/config/RatOS/scripts/delete-and-restore-printer-data.sh
timeout = 10.

[gcode_macro DELETE_AND_RESTORE_PRINTER_DATA_DIRS]
gcode = 
	RUN_SHELL_COMMAND CMD=delete_and_restore_printer_data_dirs

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[stepper_x]
step_pin = x_step_pin
dir_pin = x_dir_pin
enable_pin = !x_enable_pin
rotation_distance = 40
microsteps = 64
homing_speed = 50
homing_retract_dist = 5.0
position_max = 300
position_endstop = 0
endstop_pin = ^x_endstop_pin

[stepper_y]
step_pin = y_step_pin
dir_pin = y_dir_pin
enable_pin = !y_enable_pin
rotation_distance = 40
microsteps = 64
homing_speed = 50
homing_retract_dist = 5.0
position_max = 300
position_endstop = 300
endstop_pin = ^y_endstop_pin
homing_positive_dir = true

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = z0_step_pin
dir_pin = !z0_dir_pin
enable_pin = !z0_enable_pin
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 300

[stepper_z1]
step_pin = z1_step_pin
dir_pin = !z1_dir_pin
enable_pin = !z1_enable_pin
rotation_distance = 4
microsteps = 64

[stepper_z2]
step_pin = z2_step_pin
dir_pin = !z2_dir_pin
enable_pin = !z2_enable_pin
rotation_distance = 4
microsteps = 64

[extruder]
step_pin = e_step_pin
dir_pin = !e_dir_pin
enable_pin = !e_enable_pin
microsteps = 16
rotation_distance = 22.67895
gear_ratio = 50:8
full_steps_per_rotation = 200
max_extrude_only_distance = 200
max_extrude_only_velocity = 75.0
max_extrude_only_accel = 1500
filament_diameter = 1.750
nozzle_diameter = 0.4
heater_pin = e_heater_pin
sensor_type = ATC Semitec 104GT-2
sensor_pin = e_sensor_pin
min_extrude_temp = 170
min_temp = 0
max_temp = 285
pressure_advance = 0.03
control = pid
pid_kp = 28.413
pid_ki = 1.334
pid_kd = 151.300

[bed_mesh]
speed = 300
horizontal_move_z = 5
mesh_min = 20,20
mesh_max = 265,260
probe_count = 7,7
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 300
z_positions = 
	0,0
	150,300
	300,0
points = 
	60,60
	185,270
	260,60
horizontal_move_z = 20
retries = 10
retry_tolerance = 0.02

[tmc2209 stepper_x]
stealthchop_threshold = 0
interpolate = False
uart_pin = x_uart_pin
run_current = 1.6
driver_tbl = 2
driver_toff = 3
driver_hend = 0
driver_hstrt = 6

[tmc2209 stepper_y]
stealthchop_threshold = 0
interpolate = False
uart_pin = y_uart_pin
run_current = 1.6
driver_tbl = 2
driver_toff = 3
driver_hend = 0
driver_hstrt = 6

[tmc2209 extruder]
uart_pin = e_uart_pin
run_current = 0.35
stealthchop_threshold = 0
interpolate = True

[tmc2209 stepper_z]
stealthchop_threshold = 0
interpolate = False
uart_pin = z0_uart_pin
run_current = 1.6
driver_tbl = 2
driver_toff = 3
driver_hend = 0
driver_hstrt = 6

[tmc2209 stepper_z1]
stealthchop_threshold = 0
interpolate = False
uart_pin = z1_uart_pin
run_current = 1.6
driver_tbl = 2
driver_toff = 3
driver_hend = 0
driver_hstrt = 6

[tmc2209 stepper_z2]
stealthchop_threshold = 0
interpolate = False
uart_pin = z2_uart_pin
run_current = 1.6
driver_tbl = 2
driver_toff = 3
driver_hend = 0
driver_hstrt = 6

[gcode_macro _ASSERT_PROBE_STATE]
description = ensures probe is in a known state; QUERY_PROBE must have been called before this macro!
gcode = 
	
	
	
	{% set last_query_state = "stowed" if printer.probe.last_query == 1 else "deployed" %}
	
	{% if params.MUST_BE != last_query_state %}
	{ action_raise_error("expected probe state to be {} but is {} ({})".format(params.MUST_BE, last_query_state, printer.probe.last_query)) }
	{% else %}
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_state VALUE="'{ last_query_state }'"
	{% endif %}

[gcode_macro ASSERT_PROBE_DEPLOYED]
description = error if probe not deployed
gcode = 
	M400
	G4 P100
	
	QUERY_PROBE
	_ASSERT_PROBE_STATE MUST_BE=deployed

[gcode_macro ASSERT_PROBE_STOWED]
description = error if probe not stowed
gcode = 
	M400
	G4 P100
	
	QUERY_PROBE
	_ASSERT_PROBE_STATE MUST_BE=stowed

[gcode_macro STOWABLE_PROBE_BEGIN_BATCH]
description = Begin stowable probe batch mode
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_batch_mode_enabled VALUE=True
	RESPOND TYPE=command MSG="Probe batch mode enabled"

[gcode_macro STOWABLE_PROBE_END_BATCH]
description = End stowable probe batch mode and stow probe
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_batch_mode_enabled VALUE=False
	RESPOND TYPE=command MSG="Probe batch mode disabled"
	STOW_PROBE

[gcode_macro DEPLOY_PROBE]
description = Deploy a stowable probe
gcode = 
	{% set RatOS = printer["gcode_macro RatOS"] %}
	{% set speed = RatOS.macro_travel_speed * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% if RatOS.stowable_probe_batch_mode_enabled and RatOS.stowable_probe_state == "deployed" %}
	RESPOND TYPE=command MSG="Probe batch mode enabled: already deployed"
	{% else %}
	RESPOND TYPE=command MSG="Deploying probe"
	
	ASSERT_PROBE_STOWED
	
	G90
	
	G0 Z{ RatOS.homing_z_hop } F{z_speed}
	
	G0 X{ RatOS.stowable_probe_position_preflight[0] } Y{ RatOS.stowable_probe_position_preflight[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_side[0] } Y{ RatOS.stowable_probe_position_side[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_dock[0] } Y{ RatOS.stowable_probe_position_dock[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_exit[0] } Y{ RatOS.stowable_probe_position_exit[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_preflight[0] } Y{ RatOS.stowable_probe_position_preflight[1] } F{ speed }
	
	ASSERT_PROBE_DEPLOYED
	
	{% endif %}

[gcode_macro STOW_PROBE]
description = Stow a stowable probe
gcode = 
	{% set RatOS = printer["gcode_macro RatOS"] %}
	{% set speed = RatOS.macro_travel_speed * 60 %}
	
	{% if RatOS.stowable_probe_batch_mode_enabled %}
	RESPOND TYPE=command MSG="Probe batch mode enabled: not stowing"
	{% else %}
	RESPOND TYPE=command MSG="Stowing probe"
	
	ASSERT_PROBE_DEPLOYED
	
	G90
	
	G0 Z{ RatOS.homing_z_hop } F3000
	
	G0 X{ RatOS.stowable_probe_position_preflight[0] } Y{ RatOS.stowable_probe_position_preflight[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_exit[0] } Y{ RatOS.stowable_probe_position_exit[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_dock[0] } Y{ RatOS.stowable_probe_position_dock[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_side[0] } Y{ RatOS.stowable_probe_position_side[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_preflight[0] } Y{ RatOS.stowable_probe_position_preflight[1] } F{ speed }
	
	ASSERT_PROBE_STOWED
	{% endif %}

[gcode_macro BED_MESH_CALIBRATE]
rename_existing = BED_MESH_CALIBRATE_ORIG
gcode = 
	{% set args = [] %}
	{% for p in params %}
	{% set tmp = args.append('%s=%s' % (p, params[p])) %}
	{% endfor %}
	DEPLOY_PROBE
	BED_MESH_CALIBRATE_ORIG {args|join(' ')}
	STOW_PROBE

[gcode_macro PROBE_CALIBRATE]
rename_existing = PROBE_CALIBRATE_ORIG
gcode = 
	{% set args = [] %}
	{% for p in params %}
	{% set tmp = args.append('%s=%s' % (p, params[p])) %}
	{% endfor %}
	{% set RatOS = printer["gcode_macro RatOS"] %}
	{% set speed = RatOS.macro_travel_speed * 60 %}
	DEPLOY_PROBE
	G90
	G0 X{ printer.toolhead.axis_maximum.x/2 } Y{ printer.toolhead.axis_maximum.y/2 } F{ speed }
	PROBE_CALIBRATE_ORIG {args|join(' ')}
	SAVE_GCODE_STATE name=probe_calibrate
	STOW_PROBE
	RESTORE_GCODE_STATE name=probe_calibrate MOVE=1 MOVE_SPEED={RatOS.macro_travel_speed|float}

[gcode_macro PROBE_ACCURACY]
rename_existing = PROBE_ACCURACY_ORIG
gcode = 
	{% set args = [] %}
	{% for p in params %}
	{% set tmp = args.append('%s=%s' % (p, params[p])) %}
	{% endfor %}
	ASSERT_PROBE_DEPLOYED
	PROBE_ACCURACY_ORIG {args|join(' ')}

[probe]
pin = ^probe_pin
x_offset = -26.96
y_offset = -25.4
speed = 5
lift_speed = 15
samples = 4
sample_retract_dist = 1.0
z_offset = 0.0

[firmware_retraction]
retract_speed = 60
unretract_extra_length = 0
unretract_speed = 60
retract_length = 0.5
=======================
Extruder max_extrude_ratio=0.266081
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
webhooks client 281472965121648: New connection
webhooks client 281472965121648: Client info {'program': 'Moonraker', 'version': 'v0.7.1-809-gc964e68'}
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
MCU error during connect
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/mcu.py", line 777, in _mcu_identify
    self._serial.connect_uart(self._serialport, self._baud, rts)
  File "/home/pi/klipper/klippy/serialhdl.py", line 182, in connect_uart
    self._error("Unable to connect")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Unable to connect

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 176, in _connect
    self.send_event("klippy:mcu_identify")
  File "/home/pi/klipper/klippy/klippy.py", line 263, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/klippy.py", line 263, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/mcu.py", line 782, in _mcu_identify
    raise error(str(e))
mcu.error: mcu 'mcu': Unable to connect
Build file /home/pi/klipper/klippy/../.config(669): Thu Jan 19 09:01:08 2023
========= Last MCU build config =========
# CONFIG_LOW_LEVEL_OPTIONS is not set
# CONFIG_MACH_AVR is not set
# CONFIG_MACH_ATSAM is not set
# CONFIG_MACH_ATSAMD is not set
# CONFIG_MACH_LPC176X is not set
# CONFIG_MACH_STM32 is not set
# CONFIG_MACH_RP2040 is not set
# CONFIG_MACH_PRU is not set
CONFIG_MACH_LINUX=y
# CONFIG_MACH_SIMU is not set
CONFIG_STEP_DELAY=2
CONFIG_BOARD_DIRECTORY="linux"
CONFIG_CLOCK_FREQ=50000000
CONFIG_LINUX_SELECT=y
CONFIG_USB_VENDOR_ID=0x1d50
CONFIG_USB_DEVICE_ID=0x614e
CONFIG_USB_SERIAL_NUMBER="12345"
CONFIG_HAVE_GPIO=y
CONFIG_HAVE_GPIO_ADC=y
CONFIG_HAVE_GPIO_SPI=y
CONFIG_HAVE_GPIO_I2C=y
CONFIG_HAVE_GPIO_HARD_PWM=y
CONFIG_HAVE_GPIO_BITBANGING=y
CONFIG_INLINE_STEPPER_HACK=y
=======================
Build file /home/pi/klipper/klippy/../out/klipper.dict(9214): Thu Jan 19 09:00:40 2023
Last MCU build version: v0.11.0-86-g6026a99a
Last MCU build tools: gcc: (Debian 10.2.1-6) 10.2.1 20210110 binutils: (GNU Binutils for Debian) 2.35.2
Last MCU build config: ADC_MAX=4095 CLOCK_FREQ=50000000 MCU=linux PCA9685_MAX=4096 PWM_MAX=32768 STATS_SUMSQ_BASE=256
Build file /home/pi/klipper/klippy/../out/klipper.elf(817776): Thu Jan 19 09:01:01 2023
Attempting MCU 'mcu' reset
Unhandled exception during post run
Traceback (most recent call last):
  File "/home/pi/klippy-env/lib/python3.9/site-packages/serial/serialposix.py", line 265, in open
    self.fd = os.open(self.portstr, os.O_RDWR | os.O_NOCTTY | os.O_NONBLOCK)
FileNotFoundError: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 234, in run
    self.send_event("klippy:firmware_restart")
  File "/home/pi/klipper/klippy/klippy.py", line 263, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/klippy.py", line 263, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/mcu.py", line 931, in _firmware_restart
    self._restart_arduino()
  File "/home/pi/klipper/klippy/mcu.py", line 891, in _restart_arduino
    serialhdl.arduino_reset(self._serialport, self._reactor)
  File "/home/pi/klipper/klippy/serialhdl.py", line 379, in arduino_reset
    ser = serial.Serial(serialport, 2400, timeout=0, exclusive=True)
  File "/home/pi/klippy-env/lib/python3.9/site-packages/serial/serialutil.py", line 240, in __init__
    self.open()
  File "/home/pi/klippy-env/lib/python3.9/site-packages/serial/serialposix.py", line 268, in open
    raise SerialException(msg.errno, "could not open port {}: {}".format(self._port, msg))
serial.serialutil.SerialException: [Errno 2] could not open port /dev/btt-manta-m8p: [Errno 2] No such file or directory: '/dev/btt-manta-m8p'
Restarting printer
Start printer at Fri Jan 20 07:03:14 2023 (1674198194.4 1225.7)
===== Config file =====
[board_pins manta_m8p_tmc2209]
aliases = 
	
	x_step_pin=PE2,    x_dir_pin=PB4,    x_enable_pin=PC11,   x_uart_pin=PC10,   x_diag_pin=PF3,    x_endstop_pin=PF3,
	y_step_pin=PF12,   y_dir_pin=PF11,   y_enable_pin=PB3,    y_uart_pin=PF13,   y_diag_pin=PF4,    y_endstop_pin=PF4,
	z0_step_pin=PA10,  z0_dir_pin=PD15,  z0_enable_pin=PA15,  z0_uart_pin=PF8,   z0_diag_pin=null,
	z1_step_pin=PD12,  z1_dir_pin=PD11,  z1_enable_pin=PD14,  z1_uart_pin=PD13,  z1_diag_pin=null,
	z2_step_pin=PD10,  z2_dir_pin=PD8,   z2_enable_pin=PD9,   z2_uart_pin=PC7,   z2_diag_pin=null,
	z3_step_pin=PE6,	 z3_dir_pin=PC13,	 z3_enable_pin=PE5,	  z3_uart_pin=PC14,   z3_diag_pin=null,
	e_step_pin=PD7,    e_dir_pin=PD6,    e_enable_pin=PF10,   e_uart_pin=PF9,    e_diag_pin=null,   e_heater_pin=PE3,  e_sensor_pin=PA1,
	stepper_spi_mosi_pin=PA7,  stepper_spi_miso_pin=PA6,  stepper_spi_sclk_pin=PA5,
	
	adxl345_cs_pin=PB15,
	
	bltouch_sensor_pin=PB2,  bltouch_control_pin=PB1,
	probe_pin=PB2,
	
	fan_part_cooling_pin=PE6,
	fan_toolhead_cooling_pin=PE0,
	fan_controller_board_pin=PC12,
	
	heater_bed_heating_pin=PB7,
	heater_bed_sensor_pin=PA0 ,
	
	
	
	EXP1_1=PE9, EXP1_2=PE10,
	EXP1_3=PE11, EXP1_4=PE12,
	EXP1_5=PE13, EXP1_6=PE14,
	EXP1_7=PE15, EXP1_8=PB10,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	
	EXP2_1=PB14, EXP2_2=PB13,
	EXP2_3=PF7, EXP2_4=PB12,
	EXP2_5=PE7, EXP2_6=PB11,
	EXP2_7=PE8, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=PC5

[mcu]
baud = 250000
serial = usb-Klipper_stm32g0b1xx_5C00390009504B4633373520-if00

[temperature_sensor Manta_M8P]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[adxl345]
spi_software_mosi_pin = stepper_spi_mosi_pin
spi_software_miso_pin = stepper_spi_miso_pin
spi_software_sclk_pin = stepper_spi_sclk_pin
cs_pin = adxl345_cs_pin

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[temperature_sensor raspberry_pi]
sensor_type = temperature_host

[skew_correction]

[input_shaper]

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[heater_bed]
heater_pin = heater_bed_heating_pin
sensor_pin = heater_bed_sensor_pin
sensor_type = Generic 3950
min_temp = 0
max_temp = 120
pwm_cycle_time = 0.02
control = pid
pid_kp = 22.2
pid_ki = 1.08
pid_kd = 114

[fan]
pin = fan_part_cooling_pin
shutdown_speed = 1.0

[heater_fan toolhead_cooling_fan]
pin = fan_toolhead_cooling_pin
fan_speed = 1

[controller_fan controller_fan]
pin = fan_controller_board_pin

[printer]
kinematics = corexy
max_velocity = 1000
max_accel = 15000
max_accel_to_decel = 7500
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[homing_override]
set_position_z = -5
axes = xyz
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_hop = printer["gcode_macro RatOS"].homing_z_hop|float %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	
	M400
	G90
	G0 Z{z_hop} F{z_speed}
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_raise_error("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_raise_error("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_speed}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config["tmc2209 stepper_x"].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config["tmc2209 stepper_y"].run_current}
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config["tmc2209 stepper_x"].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config["tmc2209 stepper_y"].run_current}
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro RatOS]
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_nozzle_priming = "primeblob"
variable_nozzle_prime_start_x = "max"
variable_nozzle_prime_start_y = "min"
variable_nozzle_prime_direction = "auto"
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_start_print_heat_chamber_bed_temp = 115
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 300
variable_macro_z_speed = 10
variable_end_print_park_z_hop = 20
variable_homing = "endstops"
variable_homing_z_hop = 25
variable_sensorless_x_current = 0.6
variable_sensorless_y_current = 0.9
variable_z_probe = "stowable"
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
gcode = 
	ECHO_RATOS_VARS
variable_stowable_probe_position_preflight = [ 30, 60 ]
variable_stowable_probe_position_side = [  13, 60 ]
variable_stowable_probe_position_dock = [   13, 6.5 ]
variable_stowable_probe_position_exit = [   60, 6.5 ]
variable_stowable_probe_batch_mode_enabled = False
variable_stowable_probe_state = None
variable_homing_x = "endstop"
variable_homing_y = "endstop"

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = printer.toolhead.axis_minimum.x + 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = printer.toolhead.axis_minimum.x + 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 F60 E20
	
	M106 S102
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_BED_MESH
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	M117 Pre-heating extruder...
	
	
	M104 S150
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM=150
	{% endif %}
	M117 Adjusting for tilt...
	
	Z_TILT_ADJUST
	M117 Rehoming after tilt adjustment...
	
	G28 Z

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CALIBRATE PROFILE=ratos
	{% endif %}
	BED_MESH_PROFILE LOAD=ratos

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	SAVE_GCODE_STATE NAME=end_print_state
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	M117 Done :)
	RESPOND MSG="Done :)"
	RESTORE_GCODE_STATE NAME=end_print_state

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_shell_command delete_and_restore_printer_data_dirs]
command = /home/pi/printer_data/config/RatOS/scripts/delete-and-restore-printer-data.sh
timeout = 10.

[gcode_macro DELETE_AND_RESTORE_PRINTER_DATA_DIRS]
gcode = 
	RUN_SHELL_COMMAND CMD=delete_and_restore_printer_data_dirs

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[stepper_x]
step_pin = x_step_pin
dir_pin = x_dir_pin
enable_pin = !x_enable_pin
rotation_distance = 40
microsteps = 64
homing_speed = 50
homing_retract_dist = 5.0
position_max = 300
position_endstop = 0
endstop_pin = ^x_endstop_pin

[stepper_y]
step_pin = y_step_pin
dir_pin = y_dir_pin
enable_pin = !y_enable_pin
rotation_distance = 40
microsteps = 64
homing_speed = 50
homing_retract_dist = 5.0
position_max = 300
position_endstop = 300
endstop_pin = ^y_endstop_pin
homing_positive_dir = true

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = z0_step_pin
dir_pin = !z0_dir_pin
enable_pin = !z0_enable_pin
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 300

[stepper_z1]
step_pin = z1_step_pin
dir_pin = !z1_dir_pin
enable_pin = !z1_enable_pin
rotation_distance = 4
microsteps = 64

[stepper_z2]
step_pin = z2_step_pin
dir_pin = !z2_dir_pin
enable_pin = !z2_enable_pin
rotation_distance = 4
microsteps = 64

[extruder]
step_pin = e_step_pin
dir_pin = !e_dir_pin
enable_pin = !e_enable_pin
microsteps = 16
rotation_distance = 22.67895
gear_ratio = 50:8
full_steps_per_rotation = 200
max_extrude_only_distance = 200
max_extrude_only_velocity = 75.0
max_extrude_only_accel = 1500
filament_diameter = 1.750
nozzle_diameter = 0.4
heater_pin = e_heater_pin
sensor_type = ATC Semitec 104GT-2
sensor_pin = e_sensor_pin
min_extrude_temp = 170
min_temp = 0
max_temp = 285
pressure_advance = 0.03
control = pid
pid_kp = 28.413
pid_ki = 1.334
pid_kd = 151.300

[bed_mesh]
speed = 300
horizontal_move_z = 5
mesh_min = 20,20
mesh_max = 265,260
probe_count = 7,7
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 300
z_positions = 
	0,0
	150,300
	300,0
points = 
	60,60
	185,270
	260,60
horizontal_move_z = 20
retries = 10
retry_tolerance = 0.02

[tmc2209 stepper_x]
stealthchop_threshold = 0
interpolate = False
uart_pin = x_uart_pin
run_current = 1.6
driver_tbl = 2
driver_toff = 3
driver_hend = 0
driver_hstrt = 6

[tmc2209 stepper_y]
stealthchop_threshold = 0
interpolate = False
uart_pin = y_uart_pin
run_current = 1.6
driver_tbl = 2
driver_toff = 3
driver_hend = 0
driver_hstrt = 6

[tmc2209 extruder]
uart_pin = e_uart_pin
run_current = 0.35
stealthchop_threshold = 0
interpolate = True

[tmc2209 stepper_z]
stealthchop_threshold = 0
interpolate = False
uart_pin = z0_uart_pin
run_current = 1.6
driver_tbl = 2
driver_toff = 3
driver_hend = 0
driver_hstrt = 6

[tmc2209 stepper_z1]
stealthchop_threshold = 0
interpolate = False
uart_pin = z1_uart_pin
run_current = 1.6
driver_tbl = 2
driver_toff = 3
driver_hend = 0
driver_hstrt = 6

[tmc2209 stepper_z2]
stealthchop_threshold = 0
interpolate = False
uart_pin = z2_uart_pin
run_current = 1.6
driver_tbl = 2
driver_toff = 3
driver_hend = 0
driver_hstrt = 6

[gcode_macro _ASSERT_PROBE_STATE]
description = ensures probe is in a known state; QUERY_PROBE must have been called before this macro!
gcode = 
	
	
	
	{% set last_query_state = "stowed" if printer.probe.last_query == 1 else "deployed" %}
	
	{% if params.MUST_BE != last_query_state %}
	{ action_raise_error("expected probe state to be {} but is {} ({})".format(params.MUST_BE, last_query_state, printer.probe.last_query)) }
	{% else %}
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_state VALUE="'{ last_query_state }'"
	{% endif %}

[gcode_macro ASSERT_PROBE_DEPLOYED]
description = error if probe not deployed
gcode = 
	M400
	G4 P100
	
	QUERY_PROBE
	_ASSERT_PROBE_STATE MUST_BE=deployed

[gcode_macro ASSERT_PROBE_STOWED]
description = error if probe not stowed
gcode = 
	M400
	G4 P100
	
	QUERY_PROBE
	_ASSERT_PROBE_STATE MUST_BE=stowed

[gcode_macro STOWABLE_PROBE_BEGIN_BATCH]
description = Begin stowable probe batch mode
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_batch_mode_enabled VALUE=True
	RESPOND TYPE=command MSG="Probe batch mode enabled"

[gcode_macro STOWABLE_PROBE_END_BATCH]
description = End stowable probe batch mode and stow probe
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_batch_mode_enabled VALUE=False
	RESPOND TYPE=command MSG="Probe batch mode disabled"
	STOW_PROBE

[gcode_macro DEPLOY_PROBE]
description = Deploy a stowable probe
gcode = 
	{% set RatOS = printer["gcode_macro RatOS"] %}
	{% set speed = RatOS.macro_travel_speed * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% if RatOS.stowable_probe_batch_mode_enabled and RatOS.stowable_probe_state == "deployed" %}
	RESPOND TYPE=command MSG="Probe batch mode enabled: already deployed"
	{% else %}
	RESPOND TYPE=command MSG="Deploying probe"
	
	ASSERT_PROBE_STOWED
	
	G90
	
	G0 Z{ RatOS.homing_z_hop } F{z_speed}
	
	G0 X{ RatOS.stowable_probe_position_preflight[0] } Y{ RatOS.stowable_probe_position_preflight[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_side[0] } Y{ RatOS.stowable_probe_position_side[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_dock[0] } Y{ RatOS.stowable_probe_position_dock[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_exit[0] } Y{ RatOS.stowable_probe_position_exit[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_preflight[0] } Y{ RatOS.stowable_probe_position_preflight[1] } F{ speed }
	
	ASSERT_PROBE_DEPLOYED
	
	{% endif %}

[gcode_macro STOW_PROBE]
description = Stow a stowable probe
gcode = 
	{% set RatOS = printer["gcode_macro RatOS"] %}
	{% set speed = RatOS.macro_travel_speed * 60 %}
	
	{% if RatOS.stowable_probe_batch_mode_enabled %}
	RESPOND TYPE=command MSG="Probe batch mode enabled: not stowing"
	{% else %}
	RESPOND TYPE=command MSG="Stowing probe"
	
	ASSERT_PROBE_DEPLOYED
	
	G90
	
	G0 Z{ RatOS.homing_z_hop } F3000
	
	G0 X{ RatOS.stowable_probe_position_preflight[0] } Y{ RatOS.stowable_probe_position_preflight[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_exit[0] } Y{ RatOS.stowable_probe_position_exit[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_dock[0] } Y{ RatOS.stowable_probe_position_dock[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_side[0] } Y{ RatOS.stowable_probe_position_side[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_preflight[0] } Y{ RatOS.stowable_probe_position_preflight[1] } F{ speed }
	
	ASSERT_PROBE_STOWED
	{% endif %}

[gcode_macro BED_MESH_CALIBRATE]
rename_existing = BED_MESH_CALIBRATE_ORIG
gcode = 
	{% set args = [] %}
	{% for p in params %}
	{% set tmp = args.append('%s=%s' % (p, params[p])) %}
	{% endfor %}
	DEPLOY_PROBE
	BED_MESH_CALIBRATE_ORIG {args|join(' ')}
	STOW_PROBE

[gcode_macro PROBE_CALIBRATE]
rename_existing = PROBE_CALIBRATE_ORIG
gcode = 
	{% set args = [] %}
	{% for p in params %}
	{% set tmp = args.append('%s=%s' % (p, params[p])) %}
	{% endfor %}
	{% set RatOS = printer["gcode_macro RatOS"] %}
	{% set speed = RatOS.macro_travel_speed * 60 %}
	DEPLOY_PROBE
	G90
	G0 X{ printer.toolhead.axis_maximum.x/2 } Y{ printer.toolhead.axis_maximum.y/2 } F{ speed }
	PROBE_CALIBRATE_ORIG {args|join(' ')}
	SAVE_GCODE_STATE name=probe_calibrate
	STOW_PROBE
	RESTORE_GCODE_STATE name=probe_calibrate MOVE=1 MOVE_SPEED={RatOS.macro_travel_speed|float}

[gcode_macro PROBE_ACCURACY]
rename_existing = PROBE_ACCURACY_ORIG
gcode = 
	{% set args = [] %}
	{% for p in params %}
	{% set tmp = args.append('%s=%s' % (p, params[p])) %}
	{% endfor %}
	ASSERT_PROBE_DEPLOYED
	PROBE_ACCURACY_ORIG {args|join(' ')}

[probe]
pin = ^probe_pin
x_offset = -26.96
y_offset = -25.4
speed = 5
lift_speed = 15
samples = 4
sample_retract_dist = 1.0
z_offset = 0.0

[firmware_retraction]
retract_speed = 60
unretract_extra_length = 0
unretract_speed = 60
retract_length = 0.5
=======================
Extruder max_extrude_ratio=0.266081
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port usb-Klipper_stm32g0b1xx_5C00390009504B4633373520-if00: [Errno 2] No such file or directory: 'usb-Klipper_stm32g0b1xx_5C00390009504B4633373520-if00'
webhooks client 281472971925920: New connection
webhooks client 281472971925920: Client info {'program': 'Moonraker', 'version': 'v0.7.1-809-gc964e68'}
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port usb-Klipper_stm32g0b1xx_5C00390009504B4633373520-if00: [Errno 2] No such file or directory: 'usb-Klipper_stm32g0b1xx_5C00390009504B4633373520-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port usb-Klipper_stm32g0b1xx_5C00390009504B4633373520-if00: [Errno 2] No such file or directory: 'usb-Klipper_stm32g0b1xx_5C00390009504B4633373520-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port usb-Klipper_stm32g0b1xx_5C00390009504B4633373520-if00: [Errno 2] No such file or directory: 'usb-Klipper_stm32g0b1xx_5C00390009504B4633373520-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port usb-Klipper_stm32g0b1xx_5C00390009504B4633373520-if00: [Errno 2] No such file or directory: 'usb-Klipper_stm32g0b1xx_5C00390009504B4633373520-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port usb-Klipper_stm32g0b1xx_5C00390009504B4633373520-if00: [Errno 2] No such file or directory: 'usb-Klipper_stm32g0b1xx_5C00390009504B4633373520-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port usb-Klipper_stm32g0b1xx_5C00390009504B4633373520-if00: [Errno 2] No such file or directory: 'usb-Klipper_stm32g0b1xx_5C00390009504B4633373520-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port usb-Klipper_stm32g0b1xx_5C00390009504B4633373520-if00: [Errno 2] No such file or directory: 'usb-Klipper_stm32g0b1xx_5C00390009504B4633373520-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port usb-Klipper_stm32g0b1xx_5C00390009504B4633373520-if00: [Errno 2] No such file or directory: 'usb-Klipper_stm32g0b1xx_5C00390009504B4633373520-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port usb-Klipper_stm32g0b1xx_5C00390009504B4633373520-if00: [Errno 2] No such file or directory: 'usb-Klipper_stm32g0b1xx_5C00390009504B4633373520-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port usb-Klipper_stm32g0b1xx_5C00390009504B4633373520-if00: [Errno 2] No such file or directory: 'usb-Klipper_stm32g0b1xx_5C00390009504B4633373520-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port usb-Klipper_stm32g0b1xx_5C00390009504B4633373520-if00: [Errno 2] No such file or directory: 'usb-Klipper_stm32g0b1xx_5C00390009504B4633373520-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port usb-Klipper_stm32g0b1xx_5C00390009504B4633373520-if00: [Errno 2] No such file or directory: 'usb-Klipper_stm32g0b1xx_5C00390009504B4633373520-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port usb-Klipper_stm32g0b1xx_5C00390009504B4633373520-if00: [Errno 2] No such file or directory: 'usb-Klipper_stm32g0b1xx_5C00390009504B4633373520-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port usb-Klipper_stm32g0b1xx_5C00390009504B4633373520-if00: [Errno 2] No such file or directory: 'usb-Klipper_stm32g0b1xx_5C00390009504B4633373520-if00'
Attempting MCU 'mcu' reset
Unhandled exception during post run
Traceback (most recent call last):
  File "/home/pi/klippy-env/lib/python3.9/site-packages/serial/serialposix.py", line 265, in open
    self.fd = os.open(self.portstr, os.O_RDWR | os.O_NOCTTY | os.O_NONBLOCK)
FileNotFoundError: [Errno 2] No such file or directory: 'usb-Klipper_stm32g0b1xx_5C00390009504B4633373520-if00'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 234, in run
    self.send_event("klippy:firmware_restart")
  File "/home/pi/klipper/klippy/klippy.py", line 263, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/klippy.py", line 263, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/mcu.py", line 931, in _firmware_restart
    self._restart_arduino()
  File "/home/pi/klipper/klippy/mcu.py", line 891, in _restart_arduino
    serialhdl.arduino_reset(self._serialport, self._reactor)
  File "/home/pi/klipper/klippy/serialhdl.py", line 379, in arduino_reset
    ser = serial.Serial(serialport, 2400, timeout=0, exclusive=True)
  File "/home/pi/klippy-env/lib/python3.9/site-packages/serial/serialutil.py", line 240, in __init__
    self.open()
  File "/home/pi/klippy-env/lib/python3.9/site-packages/serial/serialposix.py", line 268, in open
    raise SerialException(msg.errno, "could not open port {}: {}".format(self._port, msg))
serial.serialutil.SerialException: [Errno 2] could not open port usb-Klipper_stm32g0b1xx_5C00390009504B4633373520-if00: [Errno 2] No such file or directory: 'usb-Klipper_stm32g0b1xx_5C00390009504B4633373520-if00'
Restarting printer
Start printer at Fri Jan 20 07:04:30 2023 (1674198270.3 1301.6)
===== Config file =====
[board_pins manta_m8p_tmc2209]
aliases = 
	
	x_step_pin=PE2,    x_dir_pin=PB4,    x_enable_pin=PC11,   x_uart_pin=PC10,   x_diag_pin=PF3,    x_endstop_pin=PF3,
	y_step_pin=PF12,   y_dir_pin=PF11,   y_enable_pin=PB3,    y_uart_pin=PF13,   y_diag_pin=PF4,    y_endstop_pin=PF4,
	z0_step_pin=PA10,  z0_dir_pin=PD15,  z0_enable_pin=PA15,  z0_uart_pin=PF8,   z0_diag_pin=null,
	z1_step_pin=PD12,  z1_dir_pin=PD11,  z1_enable_pin=PD14,  z1_uart_pin=PD13,  z1_diag_pin=null,
	z2_step_pin=PD10,  z2_dir_pin=PD8,   z2_enable_pin=PD9,   z2_uart_pin=PC7,   z2_diag_pin=null,
	z3_step_pin=PE6,	 z3_dir_pin=PC13,	 z3_enable_pin=PE5,	  z3_uart_pin=PC14,   z3_diag_pin=null,
	e_step_pin=PD7,    e_dir_pin=PD6,    e_enable_pin=PF10,   e_uart_pin=PF9,    e_diag_pin=null,   e_heater_pin=PE3,  e_sensor_pin=PA1,
	stepper_spi_mosi_pin=PA7,  stepper_spi_miso_pin=PA6,  stepper_spi_sclk_pin=PA5,
	
	adxl345_cs_pin=PB15,
	
	bltouch_sensor_pin=PB2,  bltouch_control_pin=PB1,
	probe_pin=PB2,
	
	fan_part_cooling_pin=PE6,
	fan_toolhead_cooling_pin=PE0,
	fan_controller_board_pin=PC12,
	
	heater_bed_heating_pin=PB7,
	heater_bed_sensor_pin=PA0 ,
	
	
	
	EXP1_1=PE9, EXP1_2=PE10,
	EXP1_3=PE11, EXP1_4=PE12,
	EXP1_5=PE13, EXP1_6=PE14,
	EXP1_7=PE15, EXP1_8=PB10,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	
	EXP2_1=PB14, EXP2_2=PB13,
	EXP2_3=PF7, EXP2_4=PB12,
	EXP2_5=PE7, EXP2_6=PB11,
	EXP2_7=PE8, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=PC5

[mcu]
baud = 250000
serial = /dev/serial/by-id/usb-Klipper_stm32g0b1xx_5C00390009504B4633373520-if00

[temperature_sensor Manta_M8P]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[adxl345]
spi_software_mosi_pin = stepper_spi_mosi_pin
spi_software_miso_pin = stepper_spi_miso_pin
spi_software_sclk_pin = stepper_spi_sclk_pin
cs_pin = adxl345_cs_pin

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[temperature_sensor raspberry_pi]
sensor_type = temperature_host

[skew_correction]

[input_shaper]

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[heater_bed]
heater_pin = heater_bed_heating_pin
sensor_pin = heater_bed_sensor_pin
sensor_type = Generic 3950
min_temp = 0
max_temp = 120
pwm_cycle_time = 0.02
control = pid
pid_kp = 22.2
pid_ki = 1.08
pid_kd = 114

[fan]
pin = fan_part_cooling_pin
shutdown_speed = 1.0

[heater_fan toolhead_cooling_fan]
pin = fan_toolhead_cooling_pin
fan_speed = 1

[controller_fan controller_fan]
pin = fan_controller_board_pin

[printer]
kinematics = corexy
max_velocity = 1000
max_accel = 15000
max_accel_to_decel = 7500
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[homing_override]
set_position_z = -5
axes = xyz
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_hop = printer["gcode_macro RatOS"].homing_z_hop|float %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	
	M400
	G90
	G0 Z{z_hop} F{z_speed}
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_raise_error("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_raise_error("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_speed}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config["tmc2209 stepper_x"].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config["tmc2209 stepper_y"].run_current}
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config["tmc2209 stepper_x"].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config["tmc2209 stepper_y"].run_current}
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro RatOS]
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_nozzle_priming = "primeblob"
variable_nozzle_prime_start_x = "max"
variable_nozzle_prime_start_y = "min"
variable_nozzle_prime_direction = "auto"
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_start_print_heat_chamber_bed_temp = 115
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 300
variable_macro_z_speed = 10
variable_end_print_park_z_hop = 20
variable_homing = "endstops"
variable_homing_z_hop = 25
variable_sensorless_x_current = 0.6
variable_sensorless_y_current = 0.9
variable_z_probe = "stowable"
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
gcode = 
	ECHO_RATOS_VARS
variable_stowable_probe_position_preflight = [ 30, 60 ]
variable_stowable_probe_position_side = [  13, 60 ]
variable_stowable_probe_position_dock = [   13, 6.5 ]
variable_stowable_probe_position_exit = [   60, 6.5 ]
variable_stowable_probe_batch_mode_enabled = False
variable_stowable_probe_state = None
variable_homing_x = "endstop"
variable_homing_y = "endstop"

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = printer.toolhead.axis_minimum.x + 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = printer.toolhead.axis_minimum.x + 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 F60 E20
	
	M106 S102
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_BED_MESH
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	M117 Pre-heating extruder...
	
	
	M104 S150
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM=150
	{% endif %}
	M117 Adjusting for tilt...
	
	Z_TILT_ADJUST
	M117 Rehoming after tilt adjustment...
	
	G28 Z

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CALIBRATE PROFILE=ratos
	{% endif %}
	BED_MESH_PROFILE LOAD=ratos

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	SAVE_GCODE_STATE NAME=end_print_state
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	M117 Done :)
	RESPOND MSG="Done :)"
	RESTORE_GCODE_STATE NAME=end_print_state

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_shell_command delete_and_restore_printer_data_dirs]
command = /home/pi/printer_data/config/RatOS/scripts/delete-and-restore-printer-data.sh
timeout = 10.

[gcode_macro DELETE_AND_RESTORE_PRINTER_DATA_DIRS]
gcode = 
	RUN_SHELL_COMMAND CMD=delete_and_restore_printer_data_dirs

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[stepper_x]
step_pin = x_step_pin
dir_pin = x_dir_pin
enable_pin = !x_enable_pin
rotation_distance = 40
microsteps = 64
homing_speed = 50
homing_retract_dist = 5.0
position_max = 300
position_endstop = 0
endstop_pin = ^x_endstop_pin

[stepper_y]
step_pin = y_step_pin
dir_pin = y_dir_pin
enable_pin = !y_enable_pin
rotation_distance = 40
microsteps = 64
homing_speed = 50
homing_retract_dist = 5.0
position_max = 300
position_endstop = 300
endstop_pin = ^y_endstop_pin
homing_positive_dir = true

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = z0_step_pin
dir_pin = !z0_dir_pin
enable_pin = !z0_enable_pin
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 300

[stepper_z1]
step_pin = z1_step_pin
dir_pin = !z1_dir_pin
enable_pin = !z1_enable_pin
rotation_distance = 4
microsteps = 64

[stepper_z2]
step_pin = z2_step_pin
dir_pin = !z2_dir_pin
enable_pin = !z2_enable_pin
rotation_distance = 4
microsteps = 64

[extruder]
step_pin = e_step_pin
dir_pin = !e_dir_pin
enable_pin = !e_enable_pin
microsteps = 16
rotation_distance = 22.67895
gear_ratio = 50:8
full_steps_per_rotation = 200
max_extrude_only_distance = 200
max_extrude_only_velocity = 75.0
max_extrude_only_accel = 1500
filament_diameter = 1.750
nozzle_diameter = 0.4
heater_pin = e_heater_pin
sensor_type = ATC Semitec 104GT-2
sensor_pin = e_sensor_pin
min_extrude_temp = 170
min_temp = 0
max_temp = 285
pressure_advance = 0.03
control = pid
pid_kp = 28.413
pid_ki = 1.334
pid_kd = 151.300

[bed_mesh]
speed = 300
horizontal_move_z = 5
mesh_min = 20,20
mesh_max = 265,260
probe_count = 7,7
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 300
z_positions = 
	0,0
	150,300
	300,0
points = 
	60,60
	185,270
	260,60
horizontal_move_z = 20
retries = 10
retry_tolerance = 0.02

[tmc2209 stepper_x]
stealthchop_threshold = 0
interpolate = False
uart_pin = x_uart_pin
run_current = 1.6
driver_tbl = 2
driver_toff = 3
driver_hend = 0
driver_hstrt = 6

[tmc2209 stepper_y]
stealthchop_threshold = 0
interpolate = False
uart_pin = y_uart_pin
run_current = 1.6
driver_tbl = 2
driver_toff = 3
driver_hend = 0
driver_hstrt = 6

[tmc2209 extruder]
uart_pin = e_uart_pin
run_current = 0.35
stealthchop_threshold = 0
interpolate = True

[tmc2209 stepper_z]
stealthchop_threshold = 0
interpolate = False
uart_pin = z0_uart_pin
run_current = 1.6
driver_tbl = 2
driver_toff = 3
driver_hend = 0
driver_hstrt = 6

[tmc2209 stepper_z1]
stealthchop_threshold = 0
interpolate = False
uart_pin = z1_uart_pin
run_current = 1.6
driver_tbl = 2
driver_toff = 3
driver_hend = 0
driver_hstrt = 6

[tmc2209 stepper_z2]
stealthchop_threshold = 0
interpolate = False
uart_pin = z2_uart_pin
run_current = 1.6
driver_tbl = 2
driver_toff = 3
driver_hend = 0
driver_hstrt = 6

[gcode_macro _ASSERT_PROBE_STATE]
description = ensures probe is in a known state; QUERY_PROBE must have been called before this macro!
gcode = 
	
	
	
	{% set last_query_state = "stowed" if printer.probe.last_query == 1 else "deployed" %}
	
	{% if params.MUST_BE != last_query_state %}
	{ action_raise_error("expected probe state to be {} but is {} ({})".format(params.MUST_BE, last_query_state, printer.probe.last_query)) }
	{% else %}
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_state VALUE="'{ last_query_state }'"
	{% endif %}

[gcode_macro ASSERT_PROBE_DEPLOYED]
description = error if probe not deployed
gcode = 
	M400
	G4 P100
	
	QUERY_PROBE
	_ASSERT_PROBE_STATE MUST_BE=deployed

[gcode_macro ASSERT_PROBE_STOWED]
description = error if probe not stowed
gcode = 
	M400
	G4 P100
	
	QUERY_PROBE
	_ASSERT_PROBE_STATE MUST_BE=stowed

[gcode_macro STOWABLE_PROBE_BEGIN_BATCH]
description = Begin stowable probe batch mode
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_batch_mode_enabled VALUE=True
	RESPOND TYPE=command MSG="Probe batch mode enabled"

[gcode_macro STOWABLE_PROBE_END_BATCH]
description = End stowable probe batch mode and stow probe
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_batch_mode_enabled VALUE=False
	RESPOND TYPE=command MSG="Probe batch mode disabled"
	STOW_PROBE

[gcode_macro DEPLOY_PROBE]
description = Deploy a stowable probe
gcode = 
	{% set RatOS = printer["gcode_macro RatOS"] %}
	{% set speed = RatOS.macro_travel_speed * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% if RatOS.stowable_probe_batch_mode_enabled and RatOS.stowable_probe_state == "deployed" %}
	RESPOND TYPE=command MSG="Probe batch mode enabled: already deployed"
	{% else %}
	RESPOND TYPE=command MSG="Deploying probe"
	
	ASSERT_PROBE_STOWED
	
	G90
	
	G0 Z{ RatOS.homing_z_hop } F{z_speed}
	
	G0 X{ RatOS.stowable_probe_position_preflight[0] } Y{ RatOS.stowable_probe_position_preflight[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_side[0] } Y{ RatOS.stowable_probe_position_side[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_dock[0] } Y{ RatOS.stowable_probe_position_dock[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_exit[0] } Y{ RatOS.stowable_probe_position_exit[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_preflight[0] } Y{ RatOS.stowable_probe_position_preflight[1] } F{ speed }
	
	ASSERT_PROBE_DEPLOYED
	
	{% endif %}

[gcode_macro STOW_PROBE]
description = Stow a stowable probe
gcode = 
	{% set RatOS = printer["gcode_macro RatOS"] %}
	{% set speed = RatOS.macro_travel_speed * 60 %}
	
	{% if RatOS.stowable_probe_batch_mode_enabled %}
	RESPOND TYPE=command MSG="Probe batch mode enabled: not stowing"
	{% else %}
	RESPOND TYPE=command MSG="Stowing probe"
	
	ASSERT_PROBE_DEPLOYED
	
	G90
	
	G0 Z{ RatOS.homing_z_hop } F3000
	
	G0 X{ RatOS.stowable_probe_position_preflight[0] } Y{ RatOS.stowable_probe_position_preflight[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_exit[0] } Y{ RatOS.stowable_probe_position_exit[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_dock[0] } Y{ RatOS.stowable_probe_position_dock[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_side[0] } Y{ RatOS.stowable_probe_position_side[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_preflight[0] } Y{ RatOS.stowable_probe_position_preflight[1] } F{ speed }
	
	ASSERT_PROBE_STOWED
	{% endif %}

[gcode_macro BED_MESH_CALIBRATE]
rename_existing = BED_MESH_CALIBRATE_ORIG
gcode = 
	{% set args = [] %}
	{% for p in params %}
	{% set tmp = args.append('%s=%s' % (p, params[p])) %}
	{% endfor %}
	DEPLOY_PROBE
	BED_MESH_CALIBRATE_ORIG {args|join(' ')}
	STOW_PROBE

[gcode_macro PROBE_CALIBRATE]
rename_existing = PROBE_CALIBRATE_ORIG
gcode = 
	{% set args = [] %}
	{% for p in params %}
	{% set tmp = args.append('%s=%s' % (p, params[p])) %}
	{% endfor %}
	{% set RatOS = printer["gcode_macro RatOS"] %}
	{% set speed = RatOS.macro_travel_speed * 60 %}
	DEPLOY_PROBE
	G90
	G0 X{ printer.toolhead.axis_maximum.x/2 } Y{ printer.toolhead.axis_maximum.y/2 } F{ speed }
	PROBE_CALIBRATE_ORIG {args|join(' ')}
	SAVE_GCODE_STATE name=probe_calibrate
	STOW_PROBE
	RESTORE_GCODE_STATE name=probe_calibrate MOVE=1 MOVE_SPEED={RatOS.macro_travel_speed|float}

[gcode_macro PROBE_ACCURACY]
rename_existing = PROBE_ACCURACY_ORIG
gcode = 
	{% set args = [] %}
	{% for p in params %}
	{% set tmp = args.append('%s=%s' % (p, params[p])) %}
	{% endfor %}
	ASSERT_PROBE_DEPLOYED
	PROBE_ACCURACY_ORIG {args|join(' ')}

[probe]
pin = ^probe_pin
x_offset = -26.96
y_offset = -25.4
speed = 5
lift_speed = 15
samples = 4
sample_retract_dist = 1.0
z_offset = 0.0

[firmware_retraction]
retract_speed = 60
unretract_extra_length = 0
unretract_speed = 60
retract_length = 0.5
=======================
Extruder max_extrude_ratio=0.266081
mcu 'mcu': Starting serial connect
webhooks client 281472963545072: New connection
webhooks client 281472963545072: Client info {'program': 'Moonraker', 'version': 'v0.7.1-809-gc964e68'}
Loaded MCU 'mcu' 105 commands (v0.11.0-62-gf1203d56 / gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.35.2-2+14+b2) 2.35.2)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1_PA9_PA10=PA9,PA10 BUS_PINS_i2c1_PB6_PB7=PB6,PB7 BUS_PINS_i2c1_PB8_PB9=PB8,PB9 BUS_PINS_i2c2_PB10_PB11=PB10,PB11 BUS_PINS_i2c2_PB13_PB14=PB13,PB14 BUS_PINS_i2c3_PB3_PB4=PB3,PB4 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi2a=PC2,PC3,PB10 BUS_PINS_spi3=PB4,PB5,PB3 CLOCK_FREQ=64000000 MCU=stm32g0b1xx PWM_MAX=255 RESERVE_PINS_USB=PA11,PA12 RESERVE_PINS_crystal=PF0,PF1 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
mcu_temperature 'mcu' nominal base=-268.840580 slope=1305.652174
Sending MCU 'mcu' printer configuration...
Configured MCU 'mcu' (1024 moves)
Starting heater checks for heater_bed
bed_mesh: generated points
Index |  Tool Adjusted  |   Probe
  0   | (47.0, 45.4)    | (20.0, 20.0)
  1   | (87.8, 45.4)    | (60.8, 20.0)
  2   | (128.6, 45.4)   | (101.7, 20.0)
  3   | (169.5, 45.4)   | (142.5, 20.0)
  4   | (210.3, 45.4)   | (183.3, 20.0)
  5   | (251.1, 45.4)   | (224.1, 20.0)
  6   | (291.9, 45.4)   | (265.0, 20.0)
  7   | (291.9, 85.4)   | (265.0, 60.0)
  8   | (251.1, 85.4)   | (224.2, 60.0)
  9   | (210.3, 85.4)   | (183.3, 60.0)
  10  | (169.5, 85.4)   | (142.5, 60.0)
  11  | (128.6, 85.4)   | (101.7, 60.0)
  12  | (87.8, 85.4)    | (60.8, 60.0)
  13  | (47.0, 85.4)    | (20.0, 60.0)
  14  | (47.0, 125.4)   | (20.0, 100.0)
  15  | (87.8, 125.4)   | (60.8, 100.0)
  16  | (128.6, 125.4)  | (101.7, 100.0)
  17  | (169.5, 125.4)  | (142.5, 100.0)
  18  | (210.3, 125.4)  | (183.3, 100.0)
  19  | (251.1, 125.4)  | (224.1, 100.0)
  20  | (291.9, 125.4)  | (265.0, 100.0)
  21  | (291.9, 165.4)  | (265.0, 140.0)
  22  | (251.1, 165.4)  | (224.2, 140.0)
  23  | (210.3, 165.4)  | (183.3, 140.0)
  24  | (169.5, 165.4)  | (142.5, 140.0)
  25  | (128.6, 165.4)  | (101.7, 140.0)
  26  | (87.8, 165.4)   | (60.8, 140.0)
  27  | (47.0, 165.4)   | (20.0, 140.0)
  28  | (47.0, 205.4)   | (20.0, 180.0)
  29  | (87.8, 205.4)   | (60.8, 180.0)
  30  | (128.6, 205.4)  | (101.7, 180.0)
  31  | (169.5, 205.4)  | (142.5, 180.0)
  32  | (210.3, 205.4)  | (183.3, 180.0)
  33  | (251.1, 205.4)  | (224.1, 180.0)
  34  | (291.9, 205.4)  | (265.0, 180.0)
  35  | (291.9, 245.4)  | (265.0, 220.0)
  36  | (251.1, 245.4)  | (224.2, 220.0)
  37  | (210.3, 245.4)  | (183.3, 220.0)
  38  | (169.5, 245.4)  | (142.5, 220.0)
  39  | (128.6, 245.4)  | (101.7, 220.0)
  40  | (87.8, 245.4)   | (60.8, 220.0)
  41  | (47.0, 245.4)   | (20.0, 220.0)
  42  | (47.0, 285.4)   | (20.0, 260.0)
  43  | (87.8, 285.4)   | (60.8, 260.0)
  44  | (128.6, 285.4)  | (101.7, 260.0)
  45  | (169.5, 285.4)  | (142.5, 260.0)
  46  | (210.3, 285.4)  | (183.3, 260.0)
  47  | (251.1, 285.4)  | (224.1, 260.0)
  48  | (291.9, 285.4)  | (265.0, 260.0)
TMC stepper_x failed to init: Unable to read tmc uart 'stepper_x' register IFCNT
TMC stepper_y failed to init: Unable to read tmc uart 'stepper_y' register IFCNT
TMC extruder failed to init: Unable to read tmc uart 'extruder' register IFCNT
TMC stepper_z failed to init: Unable to read tmc uart 'stepper_z' register IFCNT
TMC stepper_z1 failed to init: Unable to read tmc uart 'stepper_z1' register IFCNT
TMC stepper_z2 failed to init: Unable to read tmc uart 'stepper_z2' register IFCNT
Unable to obtain tmc stepper_x phase
Unable to obtain tmc stepper_y phase
Unable to obtain tmc stepper_z phase
Unable to obtain tmc stepper_z1 phase
Unable to obtain tmc stepper_z2 phase
Starting heater checks for extruder
Unable to obtain tmc extruder phase
webhooks: registering remote method 'shutdown_machine' for connection id: 281472963545072
webhooks: registering remote method 'reboot_machine' for connection id: 281472963545072
webhooks: registering remote method 'pause_job_queue' for connection id: 281472963545072
webhooks: registering remote method 'start_job_queue' for connection id: 281472963545072
MCU 'mcu' shutdown: ADC out of range
clocksync state: mcu_freq=64000000 last_clock=26660559272 clock_est=(1303.878 26519910287 64001196.588) min_half_rtt=0.000128 min_rtt_time=1303.740 time_avg=1303.878(0.238) clock_avg=26519910287.358(15256692.710) pred_variance=2821045962.765
Dumping serial stats: bytes_write=2203 bytes_read=5309 bytes_retransmit=9 bytes_invalid=0 send_seq=216 receive_seq=216 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0
Dumping send queue 100 messages
Sent 0 1304.130783 1304.130783 12: seq: 14, config_tmcuart oid=7 rx_pin=PC7 pull_up=0 tx_pin=PC7 bit_time=1600
Sent 1 1304.131037 1304.131037 9: seq: 15, config_endstop oid=8 pin=PB2 pull_up=1
Sent 2 1304.131160 1304.131160 7: seq: 16, config_trsync oid=9
Sent 3 1304.131501 1304.131501 11: seq: 17, config_stepper oid=10 step_pin=PE2 dir_pin=PB4 invert_step=4294967295 step_pulse_ticks=0
Sent 4 1304.131668 1304.131668 11: seq: 18, config_digital_out oid=26 pin=PC11 value=1 default_value=1 max_duration=0
Sent 5 1304.132004 1304.132004 9: seq: 19, config_endstop oid=11 pin=PF3 pull_up=1
Sent 6 1304.132121 1304.132121 7: seq: 1a, config_trsync oid=12
Sent 7 1304.132419 1304.132419 11: seq: 1b, config_stepper oid=13 step_pin=PF12 dir_pin=PF11 invert_step=4294967295 step_pulse_ticks=0
Sent 8 1304.132667 1304.132667 11: seq: 1c, config_digital_out oid=27 pin=PB3 value=1 default_value=1 max_duration=0
Sent 9 1304.132865 1304.132865 9: seq: 1d, config_endstop oid=14 pin=PF4 pull_up=1
Sent 10 1304.133014 1304.133014 7: seq: 1e, config_trsync oid=15
Sent 11 1304.133329 1304.133329 11: seq: 1f, config_stepper oid=16 step_pin=PA10 dir_pin=PD15 invert_step=4294967295 step_pulse_ticks=0
Sent 12 1304.133575 1304.133575 11: seq: 10, config_digital_out oid=28 pin=PA15 value=1 default_value=1 max_duration=0
Sent 13 1304.133827 1304.133827 11: seq: 11, config_stepper oid=17 step_pin=PD12 dir_pin=PD11 invert_step=4294967295 step_pulse_ticks=0
Sent 14 1304.134072 1304.134072 11: seq: 12, config_digital_out oid=29 pin=PD14 value=1 default_value=1 max_duration=0
Sent 15 1304.134325 1304.134325 11: seq: 13, config_stepper oid=18 step_pin=PD10 dir_pin=PD8 invert_step=4294967295 step_pulse_ticks=0
Sent 16 1304.134580 1304.134580 11: seq: 14, config_digital_out oid=30 pin=PD9 value=1 default_value=1 max_duration=0
Sent 17 1304.134775 1304.134775 8: seq: 15, config_analog_in oid=31 pin=PA1
Sent 18 1304.135093 1304.135093 15: seq: 16, config_digital_out oid=32 pin=PE3 value=0 default_value=0 max_duration=320000000
Sent 19 1304.135226 1304.135226 11: seq: 17, set_digital_out_pwm_cycle oid=32 cycle_ticks=6400000
Sent 20 1304.135511 1304.135511 11: seq: 18, config_stepper oid=19 step_pin=PD7 dir_pin=PD6 invert_step=4294967295 step_pulse_ticks=0
Sent 21 1304.135712 1304.135712 11: seq: 19, config_digital_out oid=33 pin=PF10 value=1 default_value=1 max_duration=0
Sent 22 1304.135885 1304.135885 11: seq: 1a, finalize_config crc=1041399944
Sent 23 1304.136241 1304.136241 25: seq: 1b, query_analog_in oid=20 clock=866996224 sample_ticks=64000 sample_count=8 rest_ticks=19200000 min_value=6745 max_value=9255 range_check_count=4
Sent 24 1304.136517 1304.136517 27: seq: 1c, query_analog_in oid=21 clock=867636224 sample_ticks=64000 sample_count=8 rest_ticks=19200000 min_value=14777 max_value=32269 range_check_count=4
Sent 25 1304.136796 1304.136796 13: seq: 1d, queue_digital_out oid=22 clock=777912717 on_ticks=0
Sent 26 1304.137017 1304.137017 13: seq: 1e, queue_digital_out oid=23 clock=777924858 on_ticks=0
Sent 27 1304.137208 1304.137208 13: seq: 1f, queue_digital_out oid=24 clock=777933754 on_ticks=0
Sent 28 1304.137420 1304.137420 13: seq: 10, queue_digital_out oid=25 clock=777941649 on_ticks=0
Sent 29 1304.137763 1304.137763 26: seq: 11, query_analog_in oid=31 clock=874036224 sample_ticks=64000 sample_count=8 rest_ticks=19200000 min_value=683 max_value=32331 range_check_count=4
Sent 30 1304.137909 1304.137909 13: seq: 12, queue_digital_out oid=32 clock=778451374 on_ticks=0
Sent 31 1304.138329 1304.138329 6: seq: 13, get_config
Sent 32 1304.164363 1304.164363 14: seq: 14, tmcuart_send oid=2 write=b'\xea\x03H \xe4' read=10
Sent 33 1304.169725 1304.169725 14: seq: 15, tmcuart_send oid=2 write=b'\xea\x03H \xe4' read=10
Sent 34 1304.175126 1304.175126 14: seq: 16, tmcuart_send oid=2 write=b'\xea\x03H \xe4' read=10
Sent 35 1304.180245 1304.180245 14: seq: 17, tmcuart_send oid=2 write=b'\xea\x03H \xe4' read=10
Sent 36 1304.184608 1304.184608 14: seq: 18, tmcuart_send oid=2 write=b'\xea\x03H \xe4' read=10
Sent 37 1304.189659 1304.189659 14: seq: 19, tmcuart_send oid=3 write=b'\xea\x03H \xe4' read=10
Sent 38 1304.194005 1304.194005 14: seq: 1a, tmcuart_send oid=3 write=b'\xea\x03H \xe4' read=10
Sent 39 1304.198206 1304.198206 14: seq: 1b, tmcuart_send oid=3 write=b'\xea\x03H \xe4' read=10
Sent 40 1304.202451 1304.202451 14: seq: 1c, tmcuart_send oid=3 write=b'\xea\x03H \xe4' read=10
Sent 41 1304.206767 1304.206767 14: seq: 1d, tmcuart_send oid=3 write=b'\xea\x03H \xe4' read=10
Sent 42 1304.211985 1304.211985 14: seq: 1e, tmcuart_send oid=4 write=b'\xea\x03H \xe4' read=10
Sent 43 1304.216375 1304.216375 14: seq: 1f, tmcuart_send oid=4 write=b'\xea\x03H \xe4' read=10
Sent 44 1304.220662 1304.220662 14: seq: 10, tmcuart_send oid=4 write=b'\xea\x03H \xe4' read=10
Sent 45 1304.224963 1304.224963 14: seq: 11, tmcuart_send oid=4 write=b'\xea\x03H \xe4' read=10
Sent 46 1304.229199 1304.229199 14: seq: 12, tmcuart_send oid=4 write=b'\xea\x03H \xe4' read=10
Sent 47 1304.234098 1304.234098 14: seq: 13, tmcuart_send oid=5 write=b'\xea\x03H \xe4' read=10
Sent 48 1304.238377 1304.238377 14: seq: 14, tmcuart_send oid=5 write=b'\xea\x03H \xe4' read=10
Sent 49 1304.242631 1304.242631 14: seq: 15, tmcuart_send oid=5 write=b'\xea\x03H \xe4' read=10
Sent 50 1304.246880 1304.246880 14: seq: 16, tmcuart_send oid=5 write=b'\xea\x03H \xe4' read=10
Sent 51 1304.251296 1304.251296 14: seq: 17, tmcuart_send oid=5 write=b'\xea\x03H \xe4' read=10
Sent 52 1304.256346 1304.256346 14: seq: 18, tmcuart_send oid=6 write=b'\xea\x03H \xe4' read=10
Sent 53 1304.260687 1304.260687 14: seq: 19, tmcuart_send oid=6 write=b'\xea\x03H \xe4' read=10
Sent 54 1304.265006 1304.265006 14: seq: 1a, tmcuart_send oid=6 write=b'\xea\x03H \xe4' read=10
Sent 55 1304.269332 1304.269332 14: seq: 1b, tmcuart_send oid=6 write=b'\xea\x03H \xe4' read=10
Sent 56 1304.273623 1304.273623 14: seq: 1c, tmcuart_send oid=6 write=b'\xea\x03H \xe4' read=10
Sent 57 1304.278657 1304.278657 14: seq: 1d, tmcuart_send oid=7 write=b'\xea\x03H \xe4' read=10
Sent 58 1304.283034 1304.283034 14: seq: 1e, tmcuart_send oid=7 write=b'\xea\x03H \xe4' read=10
Sent 59 1304.287269 1304.287269 14: seq: 1f, tmcuart_send oid=7 write=b'\xea\x03H \xe4' read=10
Sent 60 1304.291468 1304.291468 14: seq: 10, tmcuart_send oid=7 write=b'\xea\x03H \xe4' read=10
Sent 61 1304.295696 1304.295696 14: seq: 11, tmcuart_send oid=7 write=b'\xea\x03H \xe4' read=10
Sent 62 1304.300631 1304.300631 7: seq: 12, stepper_get_position oid=10
Sent 63 1304.303263 1304.303263 14: seq: 13, tmcuart_send oid=2 write=b'\xea\x03H-\xd5' read=10
Sent 64 1304.307501 1304.307501 14: seq: 14, tmcuart_send oid=2 write=b'\xea\x03H-\xd5' read=10
Sent 65 1304.311762 1304.311762 14: seq: 15, tmcuart_send oid=2 write=b'\xea\x03H-\xd5' read=10
Sent 66 1304.315961 1304.315961 14: seq: 16, tmcuart_send oid=2 write=b'\xea\x03H-\xd5' read=10
Sent 67 1304.320287 1304.320287 14: seq: 17, tmcuart_send oid=2 write=b'\xea\x03H-\xd5' read=10
Sent 68 1304.325258 1304.325258 7: seq: 18, stepper_get_position oid=13
Sent 69 1304.327213 1304.327213 14: seq: 19, tmcuart_send oid=3 write=b'\xea\x03H-\xd5' read=10
Sent 70 1304.331517 1304.331517 14: seq: 1a, tmcuart_send oid=3 write=b'\xea\x03H-\xd5' read=10
Sent 71 1304.335755 1304.335755 14: seq: 1b, tmcuart_send oid=3 write=b'\xea\x03H-\xd5' read=10
Sent 72 1304.339991 1304.339991 14: seq: 1c, tmcuart_send oid=3 write=b'\xea\x03H-\xd5' read=10
Sent 73 1304.344220 1304.344220 14: seq: 1d, tmcuart_send oid=3 write=b'\xea\x03H-\xd5' read=10
Sent 74 1304.348969 1304.348969 7: seq: 1e, stepper_get_position oid=16
Sent 75 1304.350894 1304.350894 14: seq: 1f, tmcuart_send oid=5 write=b'\xea\x03H-\xd5' read=10
Sent 76 1304.355133 1304.355133 14: seq: 10, tmcuart_send oid=5 write=b'\xea\x03H-\xd5' read=10
Sent 77 1304.359384 1304.359384 14: seq: 11, tmcuart_send oid=5 write=b'\xea\x03H-\xd5' read=10
Sent 78 1304.363583 1304.363583 14: seq: 12, tmcuart_send oid=5 write=b'\xea\x03H-\xd5' read=10
Sent 79 1304.367820 1304.367820 14: seq: 13, tmcuart_send oid=5 write=b'\xea\x03H-\xd5' read=10
Sent 80 1304.372456 1304.372456 7: seq: 14, stepper_get_position oid=17
Sent 81 1304.374317 1304.374317 14: seq: 15, tmcuart_send oid=6 write=b'\xea\x03H-\xd5' read=10
Sent 82 1304.378446 1304.378446 14: seq: 16, tmcuart_send oid=6 write=b'\xea\x03H-\xd5' read=10
Sent 83 1304.382769 1304.382769 14: seq: 17, tmcuart_send oid=6 write=b'\xea\x03H-\xd5' read=10
Sent 84 1304.386997 1304.386997 14: seq: 18, tmcuart_send oid=6 write=b'\xea\x03H-\xd5' read=10
Sent 85 1304.391267 1304.391267 14: seq: 19, tmcuart_send oid=6 write=b'\xea\x03H-\xd5' read=10
Sent 86 1304.396046 1304.396046 7: seq: 1a, stepper_get_position oid=18
Sent 87 1304.397908 1304.397908 14: seq: 1b, tmcuart_send oid=7 write=b'\xea\x03H-\xd5' read=10
Sent 88 1304.402084 1304.402084 14: seq: 1c, tmcuart_send oid=7 write=b'\xea\x03H-\xd5' read=10
Sent 89 1304.406324 1304.406324 14: seq: 1d, tmcuart_send oid=7 write=b'\xea\x03H-\xd5' read=10
Sent 90 1304.410443 1304.410443 14: seq: 1e, tmcuart_send oid=7 write=b'\xea\x03H-\xd5' read=10
Sent 91 1304.414900 1304.414900 14: seq: 1f, tmcuart_send oid=7 write=b'\xea\x03H-\xd5' read=10
Sent 92 1304.420232 1304.420232 7: seq: 10, stepper_get_position oid=19
Sent 93 1304.422366 1304.422366 14: seq: 11, tmcuart_send oid=4 write=b'\xea\x03H-\xd5' read=10
Sent 94 1304.427900 1304.427900 14: seq: 12, tmcuart_send oid=4 write=b'\xea\x03H-\xd5' read=10
Sent 95 1304.432179 1304.432179 14: seq: 13, tmcuart_send oid=4 write=b'\xea\x03H-\xd5' read=10
Sent 96 1304.436333 1304.436333 14: seq: 14, tmcuart_send oid=4 write=b'\xea\x03H-\xd5' read=10
Sent 97 1304.440596 1304.440596 14: seq: 15, tmcuart_send oid=4 write=b'\xea\x03H-\xd5' read=10
Sent 98 1305.090523 1305.090523 6: seq: 16, get_clock
Sent 99 1306.075451 1306.075451 6: seq: 17, get_clock
Dumping receive queue 100 messages
Receive: 0 1303.666105 1303.665815 49: seq: 12, identify_response offset=2600 data=b'\x93?\xa0c\xa7dqG\xdb-\xff\x97\x92\xf5\x87Jv\x1a\xba\xdd6\xcdoC\\\x9f\xa6\xea\x07\x8e\x94\x84\x82\x17\x80\x0bn[wM'
Receive: 1 1303.667480 1303.667121 49: seq: 13, identify_response offset=2640 data=b')\xdd\xe0bM\x07\xec8\x03\xd6n\x96\xf9\x87X\x10\xb8\x18N\xb1\xea"@RG;\x0c\x07\xe2u\xbbH\xae\x9c\x17\xe3\x8a\xfew\xd4'
Receive: 2 1303.668729 1303.668432 49: seq: 14, identify_response offset=2680 data=b'b\xad*n84\x95K\xae\x96\x9c\xc8\xb6\x83.\xb7}\xa1\xbf\xda/\xdcnsj\xf4I\x01\xcf=K\x89S\xa3\x89_\x1b\x8b\xe1\xa8'
Receive: 3 1303.670046 1303.669676 49: seq: 15, identify_response offset=2720 data=b'\xb1\xf7\x1c\x84\x94l6\xf3\xa1\xaa?\xa4\x9f\xeay\xb6\xf4Q\xa5>\x18O\x9a\xd8\xb6\xc1\xd1.\xb7\xeb\x18T\xf5\xad\x12^\xfe\xc9\xa7w'
Receive: 4 1303.671415 1303.671123 42: seq: 16, identify_response offset=2760 data=b'7\xe7\xf0\xaa\xfa\x87a\xd4`\x8f\xf33\xdf?\x9b\x9f.\x83\xd3\xdd\xd6\x0f\xe6a\x06\x9f\xfc\xf5\xbf\xc8^\x00\x91'
Receive: 5 1303.672729 1303.672412 9: seq: 17, identify_response offset=2793 data=b''
Receive: 6 1303.688422 1303.688102 12: seq: 18, uptime high=6 clock=737962319
Receive: 7 1303.739926 1303.739670 11: seq: 19, clock clock=741262719
Receive: 8 1303.792230 1303.791915 11: seq: 1a, clock clock=744606595
Receive: 9 1303.843791 1303.843509 11: seq: 1b, clock clock=747908929
Receive: 10 1303.895604 1303.895300 11: seq: 1c, clock clock=751223395
Receive: 11 1303.947229 1303.946916 11: seq: 1d, clock clock=754527283
Receive: 12 1303.998928 1303.998557 11: seq: 1e, clock clock=757832051
Receive: 13 1304.050918 1304.050584 11: seq: 1f, clock clock=761161955
Receive: 14 1304.102612 1304.102291 11: seq: 10, clock clock=764470976
Receive: 15 1304.105320 1304.105008 8: seq: 11, debug_result val=1031
Receive: 16 1304.106149 1304.105884 11: seq: 12, clock clock=764700428
Receive: 17 1304.107285 1304.106998 8: seq: 13, debug_result val=1376
Receive: 18 1304.110429 1304.110071 10: seq: 14, config is_config=0 crc=0 is_shutdown=0 move_count=0
Receive: 19 1304.138597 1304.138329 15: seq: 14, config is_config=1 crc=1041399944 is_shutdown=0 move_count=1024
Receive: 20 1304.167659 1304.164363 8: seq: 15, tmcuart_response oid=2 read=b''
Receive: 21 1304.173074 1304.169725 8: seq: 16, tmcuart_response oid=2 read=b''
Receive: 22 1304.178437 1304.175126 8: seq: 17, tmcuart_response oid=2 read=b''
Receive: 23 1304.183544 1304.180245 8: seq: 18, tmcuart_response oid=2 read=b''
Receive: 24 1304.187904 1304.184608 8: seq: 19, tmcuart_response oid=2 read=b''
Receive: 25 1304.193030 1304.189659 8: seq: 1a, tmcuart_response oid=3 read=b''
Receive: 26 1304.197256 1304.194005 8: seq: 1b, tmcuart_response oid=3 read=b''
Receive: 27 1304.201497 1304.198206 8: seq: 1c, tmcuart_response oid=3 read=b''
Receive: 28 1304.205753 1304.202451 8: seq: 1d, tmcuart_response oid=3 read=b''
Receive: 29 1304.209999 1304.206767 8: seq: 1e, tmcuart_response oid=3 read=b''
Receive: 30 1304.215272 1304.211985 8: seq: 1f, tmcuart_response oid=4 read=b''
Receive: 31 1304.219635 1304.216375 8: seq: 10, tmcuart_response oid=4 read=b''
Receive: 32 1304.224004 1304.220662 8: seq: 11, tmcuart_response oid=4 read=b''
Receive: 33 1304.228250 1304.224963 8: seq: 12, tmcuart_response oid=4 read=b''
Receive: 34 1304.232383 1304.229199 8: seq: 13, tmcuart_response oid=4 read=b''
Receive: 35 1304.237408 1304.234098 8: seq: 14, tmcuart_response oid=5 read=b''
Receive: 36 1304.241627 1304.238377 8: seq: 15, tmcuart_response oid=5 read=b''
Receive: 37 1304.245872 1304.242631 8: seq: 16, tmcuart_response oid=5 read=b''
Receive: 38 1304.250125 1304.246880 8: seq: 17, tmcuart_response oid=5 read=b''
Receive: 39 1304.254548 1304.251296 8: seq: 18, tmcuart_response oid=5 read=b''
Receive: 40 1304.259655 1304.256346 8: seq: 19, tmcuart_response oid=6 read=b''
Receive: 41 1304.264009 1304.260687 8: seq: 1a, tmcuart_response oid=6 read=b''
Receive: 42 1304.268275 1304.265006 8: seq: 1b, tmcuart_response oid=6 read=b''
Receive: 43 1304.272649 1304.269332 8: seq: 1c, tmcuart_response oid=6 read=b''
Receive: 44 1304.276887 1304.273623 8: seq: 1d, tmcuart_response oid=6 read=b''
Receive: 45 1304.282020 1304.278657 8: seq: 1e, tmcuart_response oid=7 read=b''
Receive: 46 1304.286249 1304.283034 8: seq: 1f, tmcuart_response oid=7 read=b''
Receive: 47 1304.290514 1304.287269 8: seq: 10, tmcuart_response oid=7 read=b''
Receive: 48 1304.294759 1304.291468 8: seq: 11, tmcuart_response oid=7 read=b''
Receive: 49 1304.299009 1304.295696 8: seq: 12, tmcuart_response oid=7 read=b''
Receive: 50 1304.300997 1304.300631 8: seq: 13, stepper_position oid=10 pos=0
Receive: 51 1304.306515 1304.303263 8: seq: 14, tmcuart_response oid=2 read=b''
Receive: 52 1304.310752 1304.307501 8: seq: 15, tmcuart_response oid=2 read=b''
Receive: 53 1304.315013 1304.311762 8: seq: 16, tmcuart_response oid=2 read=b''
Receive: 54 1304.319268 1304.315961 8: seq: 17, tmcuart_response oid=2 read=b''
Receive: 55 1304.323504 1304.320287 8: seq: 18, tmcuart_response oid=2 read=b''
Receive: 56 1304.325533 1304.325258 8: seq: 19, stepper_position oid=13 pos=0
Receive: 57 1304.330541 1304.327213 8: seq: 1a, tmcuart_response oid=3 read=b''
Receive: 58 1304.334753 1304.331517 8: seq: 1b, tmcuart_response oid=3 read=b''
Receive: 59 1304.339010 1304.335755 8: seq: 1c, tmcuart_response oid=3 read=b''
Receive: 60 1304.343264 1304.339991 8: seq: 1d, tmcuart_response oid=3 read=b''
Receive: 61 1304.347501 1304.344220 8: seq: 1e, tmcuart_response oid=3 read=b''
Receive: 62 1304.349289 1304.348969 8: seq: 1f, stepper_position oid=16 pos=0
Receive: 63 1304.354128 1304.350894 8: seq: 10, tmcuart_response oid=5 read=b''
Receive: 64 1304.358378 1304.355133 8: seq: 11, tmcuart_response oid=5 read=b''
Receive: 65 1304.362634 1304.359384 8: seq: 12, tmcuart_response oid=5 read=b''
Receive: 66 1304.366884 1304.363583 8: seq: 13, tmcuart_response oid=5 read=b''
Receive: 67 1304.371010 1304.367820 8: seq: 14, tmcuart_response oid=5 read=b''
Receive: 68 1304.372793 1304.372456 8: seq: 15, stepper_position oid=17 pos=0
Receive: 69 1304.377506 1304.374317 8: seq: 16, tmcuart_response oid=6 read=b''
Receive: 70 1304.381755 1304.378446 8: seq: 17, tmcuart_response oid=6 read=b''
Receive: 71 1304.386001 1304.382769 8: seq: 18, tmcuart_response oid=6 read=b''
Receive: 72 1304.390249 1304.386997 8: seq: 19, tmcuart_response oid=6 read=b''
Receive: 73 1304.394549 1304.391267 8: seq: 1a, tmcuart_response oid=6 read=b''
Receive: 74 1304.396368 1304.396046 8: seq: 1b, stepper_position oid=18 pos=0
Receive: 75 1304.401124 1304.397908 8: seq: 1c, tmcuart_response oid=7 read=b''
Receive: 76 1304.405377 1304.402084 8: seq: 1d, tmcuart_response oid=7 read=b''
Receive: 77 1304.409500 1304.406324 8: seq: 1e, tmcuart_response oid=7 read=b''
Receive: 78 1304.413763 1304.410443 8: seq: 1f, tmcuart_response oid=7 read=b''
Receive: 79 1304.418127 1304.414900 8: seq: 10, tmcuart_response oid=7 read=b''
Receive: 80 1304.420553 1304.420232 8: seq: 11, stepper_position oid=19 pos=0
Receive: 81 1304.425682 1304.422366 8: seq: 12, tmcuart_response oid=4 read=b''
Receive: 82 1304.431154 1304.427900 8: seq: 13, tmcuart_response oid=4 read=b''
Receive: 83 1304.435379 1304.432179 8: seq: 14, tmcuart_response oid=4 read=b''
Receive: 84 1304.439632 1304.436333 8: seq: 15, tmcuart_response oid=4 read=b''
Receive: 85 1304.443886 1304.440596 8: seq: 16, tmcuart_response oid=4 read=b''
Receive: 86 1304.504676 1304.440596 15: seq: 16, stats count=905 sum=1059782 sumsq=12676678
Receive: 87 1305.090855 1305.090523 11: seq: 17, clock clock=827719020
Receive: 88 1305.711661 1305.090523 14: seq: 17, analog_in_state oid=20 next_clock=886196224 value=7771
Receive: 89 1305.721709 1305.090523 15: seq: 17, analog_in_state oid=21 next_clock=886836224 value=32758
Receive: 90 1305.821658 1305.090523 15: seq: 17, analog_in_state oid=31 next_clock=893236224 value=32759
Receive: 91 1306.011659 1305.090523 14: seq: 17, analog_in_state oid=20 next_clock=905396224 value=7774
Receive: 92 1306.021662 1305.090523 15: seq: 17, analog_in_state oid=21 next_clock=906036224 value=32755
Receive: 93 1306.075765 1306.075451 11: seq: 18, clock clock=890755496
Receive: 94 1306.121727 1306.075451 15: seq: 18, analog_in_state oid=31 next_clock=912436224 value=32757
Receive: 95 1306.311659 1306.075451 14: seq: 18, analog_in_state oid=20 next_clock=924596224 value=7786
Receive: 96 1306.321634 1306.075451 15: seq: 18, analog_in_state oid=21 next_clock=925236224 value=32760
Receive: 97 1306.421667 1306.075451 15: seq: 18, analog_in_state oid=31 next_clock=931636224 value=32758
Receive: 98 1306.611663 1306.075451 14: seq: 18, analog_in_state oid=20 next_clock=943796224 value=7786
Receive: 99 1306.622005 1306.075451 12: seq: 18, shutdown clock=925689573 static_string_id=ADC out of range
Transition to shutdown state: MCU 'mcu' shutdown: ADC out of range
This generally occurs when a heater temperature exceeds
its configured min_temp or max_temp.
Dumping gcode input 0 blocks
Dumping 20 requests for client 281472963545072
Received 1304.683234: b'{"id": 281473131939872, "method": "list_endpoints", "params": {}}'
Received 1304.695131: b'{"id": 281473102530160, "method": "objects/subscribe", "params": {"objects": {"webhooks": null, "print_stats": null}, "response_template": {"method": "process_status_update"}}}'
Received 1304.894257: b'{"id": 281473102528912, "method": "objects/list", "params": {}}'
Received 1304.898228: b'{"id": 281473104183104, "method": "objects/query", "params": {"objects": {"configfile": null}}}'
Received 1305.155029: b'{"id": 281473103205808, "method": "register_remote_method", "params": {"response_template": {"method": "shutdown_machine"}, "remote_method": "shutdown_machine"}}'
Received 1305.159341: b'{"id": 281473103205808, "method": "register_remote_method", "params": {"response_template": {"method": "reboot_machine"}, "remote_method": "reboot_machine"}}'
Received 1305.162826: b'{"id": 281473103205808, "method": "register_remote_method", "params": {"response_template": {"method": "pause_job_queue"}, "remote_method": "pause_job_queue"}}'
Received 1305.166244: b'{"id": 281473103205808, "method": "register_remote_method", "params": {"response_template": {"method": "start_job_queue"}, "remote_method": "start_job_queue"}}'
Received 1305.176193: b'{"id": 281473102530736, "method": "objects/query", "params": {"objects": {"heaters": null}}}'
Received 1305.176941: b'{"id": 281473102529680, "method": "objects/query", "params": {"objects": {"heaters": null}}}'
Received 1305.187235: b'{"id": 281473102530976, "method": "info", "params": {}}'
Received 1305.188323: b'{"id": 281473102531792, "method": "objects/list", "params": {}}'
Received 1305.188323: b'{"id": 281473102532320, "method": "gcode/help", "params": {}}'
Received 1305.195350: b'{"id": 281473103205088, "method": "info", "params": {}}'
Received 1305.196419: b'{"id": 281473103121424, "method": "objects/list", "params": {}}'
Received 1305.196419: b'{"id": 281473103121856, "method": "gcode/help", "params": {}}'
Received 1305.216561: b'{"id": 281473103122048, "method": "objects/subscribe", "params": {"objects": {"webhooks": null, "print_stats": null, "configfile": null, "mcu": null, "heaters": null, "temperature_sensor Manta_M8P": null, "idle_timeout": null, "temperature_host raspberry_pi": null, "temperature_sensor raspberry_pi": null, "gcode_move": null, "virtual_sdcard": null, "display_status": null, "pause_resume": null, "heater_bed": null, "fan": null, "heater_fan toolhead_cooling_fan": null, "controller_fan controller_fan": null, "gcode_macro HOME_X_SENSORLESS": null, "gcode_macro HOME_Y_SENSORLESS": null, "gcode_macro MAYBE_HOME": null, "gcode_macro ECHO_RATOS_VARS": null, "gcode_macro RatOS": null, "gcode_macro PAUSE": null, "gcode_macro RESUME": null, "gcode_macro CANCEL_PRINT": null, "gcode_macro PRIME_LINE": null, "gcode_macro PRIME_BLOB": null, "gcode_macro _PARK": null, "gcode_macro M600": null, "gcode_macro UNLOAD_FILAMENT": null, "gcode_macro LOAD_FILAMENT": null, "gcode_macro SET_CENTER_KINEMATIC_POSITION": null, "gcode_macro START_PRINT": null, "gcode_macro _START_PRINT_AFTER_HEATING_BED": null, "gcode_macro _START_PRINT_BED_MESH": null, "gcode_macro _START_PRINT_PARK": null, "gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER": null, "gcode_macro _START_PRINT_HEAT_CHAMBER": null, "gcode_macro END_PRINT": null, "gcode_macro _END_PRINT_BEFORE_HEATERS_OFF": null, "gcode_macro _END_PRINT_AFTER_HEATERS_OFF": null, "gcode_macro _END_PRINT_PARK": null, "gcode_macro DELETE_AND_RESTORE_PRINTER_DATA_DIRS": null, "gcode_macro GENERATE_SHAPER_GRAPHS": null, "gcode_macro MEASURE_COREXY_BELT_TENSION": null, "gcode_macro COMPILE_FIRMWARE": null, "gcode_macro CHANGE_HOSTNAME": null, "gcode_macro Z_TILT_ADJUST": null, "bed_mesh": null, "z_tilt": null, "tmc2209 stepper_x": null, "tmc2209 stepper_y": null, "tmc2209 extruder": null, "tmc2209 stepper_z": null, "tmc2209 stepper_z1": null, "tmc2209 stepper_z2": null, "gcode_macro _ASSERT_PROBE_STATE": null, "gcode_macro ASSERT_PROBE_DEPLOYED": null, "gcode_macro ASSERT_PROBE_STOWED": null, "gcode_macro STOWABLE_PROBE_BEGIN_BATCH": null, "gcode_macro STOWABLE_PROBE_END_BATCH": null, "gcode_macro DEPLOY_PROBE": null, "gcode_macro STOW_PROBE": null, "gcode_macro BED_MESH_CALIBRATE": null, "gcode_macro PROBE_CALIBRATE": null, "gcode_macro PROBE_ACCURACY": null, "probe": null, "firmware_retraction": null, "motion_report": null, "query_endstops": null, "system_stats": null, "manual_probe": null, "toolhead": null, "extruder": null}, "response_template": {"method": "process_status_update"}}}'
Received 1305.233215: b'{"id": 281473103220352, "method": "objects/subscribe", "params": {"objects": {"webhooks": null, "print_stats": null, "configfile": null, "mcu": null, "heaters": null, "temperature_sensor Manta_M8P": null, "idle_timeout": null, "temperature_host raspberry_pi": null, "temperature_sensor raspberry_pi": null, "gcode_move": null, "virtual_sdcard": null, "display_status": null, "pause_resume": null, "heater_bed": null, "fan": null, "heater_fan toolhead_cooling_fan": null, "controller_fan controller_fan": null, "gcode_macro HOME_X_SENSORLESS": null, "gcode_macro HOME_Y_SENSORLESS": null, "gcode_macro MAYBE_HOME": null, "gcode_macro ECHO_RATOS_VARS": null, "gcode_macro RatOS": null, "gcode_macro PAUSE": null, "gcode_macro RESUME": null, "gcode_macro CANCEL_PRINT": null, "gcode_macro PRIME_LINE": null, "gcode_macro PRIME_BLOB": null, "gcode_macro _PARK": null, "gcode_macro M600": null, "gcode_macro UNLOAD_FILAMENT": null, "gcode_macro LOAD_FILAMENT": null, "gcode_macro SET_CENTER_KINEMATIC_POSITION": null, "gcode_macro START_PRINT": null, "gcode_macro _START_PRINT_AFTER_HEATING_BED": null, "gcode_macro _START_PRINT_BED_MESH": null, "gcode_macro _START_PRINT_PARK": null, "gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER": null, "gcode_macro _START_PRINT_HEAT_CHAMBER": null, "gcode_macro END_PRINT": null, "gcode_macro _END_PRINT_BEFORE_HEATERS_OFF": null, "gcode_macro _END_PRINT_AFTER_HEATERS_OFF": null, "gcode_macro _END_PRINT_PARK": null, "gcode_macro DELETE_AND_RESTORE_PRINTER_DATA_DIRS": null, "gcode_macro GENERATE_SHAPER_GRAPHS": null, "gcode_macro MEASURE_COREXY_BELT_TENSION": null, "gcode_macro COMPILE_FIRMWARE": null, "gcode_macro CHANGE_HOSTNAME": null, "gcode_macro Z_TILT_ADJUST": null, "bed_mesh": null, "z_tilt": null, "tmc2209 stepper_x": null, "tmc2209 stepper_y": null, "tmc2209 extruder": null, "tmc2209 stepper_z": null, "tmc2209 stepper_z1": null, "tmc2209 stepper_z2": null, "gcode_macro _ASSERT_PROBE_STATE": null, "gcode_macro ASSERT_PROBE_DEPLOYED": null, "gcode_macro ASSERT_PROBE_STOWED": null, "gcode_macro STOWABLE_PROBE_BEGIN_BATCH": null, "gcode_macro STOWABLE_PROBE_END_BATCH": null, "gcode_macro DEPLOY_PROBE": null, "gcode_macro STOW_PROBE": null, "gcode_macro BED_MESH_CALIBRATE": null, "gcode_macro PROBE_CALIBRATE": null, "gcode_macro PROBE_ACCURACY": null, "probe": null, "firmware_retraction": null, "motion_report": null, "query_endstops": null, "system_stats": null, "manual_probe": null, "toolhead": null, "extruder": null}, "response_template": {"method": "process_status_update"}}}'
Received 1305.419285: b'{"id": 281473103220256, "method": "objects/subscribe", "params": {"objects": {"webhooks": null, "print_stats": null, "temperature_sensor Manta_M8P": null, "temperature_sensor raspberry_pi": null, "heater_bed": null, "extruder": null, "configfile": null, "mcu": null, "heaters": null, "idle_timeout": null, "temperature_host raspberry_pi": null, "gcode_move": null, "virtual_sdcard": null, "display_status": null, "pause_resume": null, "fan": null, "heater_fan toolhead_cooling_fan": null, "controller_fan controller_fan": null, "gcode_macro HOME_X_SENSORLESS": null, "gcode_macro HOME_Y_SENSORLESS": null, "gcode_macro MAYBE_HOME": null, "gcode_macro ECHO_RATOS_VARS": null, "gcode_macro RatOS": null, "gcode_macro PAUSE": null, "gcode_macro RESUME": null, "gcode_macro CANCEL_PRINT": null, "gcode_macro PRIME_LINE": null, "gcode_macro PRIME_BLOB": null, "gcode_macro _PARK": null, "gcode_macro M600": null, "gcode_macro UNLOAD_FILAMENT": null, "gcode_macro LOAD_FILAMENT": null, "gcode_macro SET_CENTER_KINEMATIC_POSITION": null, "gcode_macro START_PRINT": null, "gcode_macro _START_PRINT_AFTER_HEATING_BED": null, "gcode_macro _START_PRINT_BED_MESH": null, "gcode_macro _START_PRINT_PARK": null, "gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER": null, "gcode_macro _START_PRINT_HEAT_CHAMBER": null, "gcode_macro END_PRINT": null, "gcode_macro _END_PRINT_BEFORE_HEATERS_OFF": null, "gcode_macro _END_PRINT_AFTER_HEATERS_OFF": null, "gcode_macro _END_PRINT_PARK": null, "gcode_macro DELETE_AND_RESTORE_PRINTER_DATA_DIRS": null, "gcode_macro GENERATE_SHAPER_GRAPHS": null, "gcode_macro MEASURE_COREXY_BELT_TENSION": null, "gcode_macro COMPILE_FIRMWARE": null, "gcode_macro CHANGE_HOSTNAME": null, "gcode_macro Z_TILT_ADJUST": null, "bed_mesh": null, "z_tilt": null, "tmc2209 stepper_x": null, "tmc2209 stepper_y": null, "tmc2209 extruder": null, "tmc2209 stepper_z": null, "tmc2209 stepper_z1": null, "tmc2209 stepper_z2": null, "gcode_macro _ASSERT_PROBE_STATE": null, "gcode_macro ASSERT_PROBE_DEPLOYED": null, "gcode_macro ASSERT_PROBE_STOWED": null, "gcode_macro STOWABLE_PROBE_BEGIN_BATCH": null, "gcode_macro STOWABLE_PROBE_END_BATCH": null, "gcode_macro DEPLOY_PROBE": null, "gcode_macro STOW_PROBE": null, "gcode_macro BED_MESH_CALIBRATE": null, "gcode_macro PROBE_CALIBRATE": null, "gcode_macro PROBE_ACCURACY": null, "probe": null, "firmware_retraction": null, "motion_report": null, "query_endstops": null, "system_stats": null, "manual_probe": null, "toolhead": null}, "response_template": {"method": "process_status_update"}}}'
Received 1305.420305: b'{"id": 281473103121136, "method": "objects/subscribe", "params": {"objects": {"webhooks": null, "print_stats": null, "temperature_sensor Manta_M8P": null, "temperature_sensor raspberry_pi": null, "heater_bed": null, "extruder": null, "configfile": null, "mcu": null, "heaters": null, "idle_timeout": null, "temperature_host raspberry_pi": null, "gcode_move": null, "virtual_sdcard": null, "display_status": null, "pause_resume": null, "fan": null, "heater_fan toolhead_cooling_fan": null, "controller_fan controller_fan": null, "gcode_macro HOME_X_SENSORLESS": null, "gcode_macro HOME_Y_SENSORLESS": null, "gcode_macro MAYBE_HOME": null, "gcode_macro ECHO_RATOS_VARS": null, "gcode_macro RatOS": null, "gcode_macro PAUSE": null, "gcode_macro RESUME": null, "gcode_macro CANCEL_PRINT": null, "gcode_macro PRIME_LINE": null, "gcode_macro PRIME_BLOB": null, "gcode_macro _PARK": null, "gcode_macro M600": null, "gcode_macro UNLOAD_FILAMENT": null, "gcode_macro LOAD_FILAMENT": null, "gcode_macro SET_CENTER_KINEMATIC_POSITION": null, "gcode_macro START_PRINT": null, "gcode_macro _START_PRINT_AFTER_HEATING_BED": null, "gcode_macro _START_PRINT_BED_MESH": null, "gcode_macro _START_PRINT_PARK": null, "gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER": null, "gcode_macro _START_PRINT_HEAT_CHAMBER": null, "gcode_macro END_PRINT": null, "gcode_macro _END_PRINT_BEFORE_HEATERS_OFF": null, "gcode_macro _END_PRINT_AFTER_HEATERS_OFF": null, "gcode_macro _END_PRINT_PARK": null, "gcode_macro DELETE_AND_RESTORE_PRINTER_DATA_DIRS": null, "gcode_macro GENERATE_SHAPER_GRAPHS": null, "gcode_macro MEASURE_COREXY_BELT_TENSION": null, "gcode_macro COMPILE_FIRMWARE": null, "gcode_macro CHANGE_HOSTNAME": null, "gcode_macro Z_TILT_ADJUST": null, "bed_mesh": null, "z_tilt": null, "tmc2209 stepper_x": null, "tmc2209 stepper_y": null, "tmc2209 extruder": null, "tmc2209 stepper_z": null, "tmc2209 stepper_z1": null, "tmc2209 stepper_z2": null, "gcode_macro _ASSERT_PROBE_STATE": null, "gcode_macro ASSERT_PROBE_DEPLOYED": null, "gcode_macro ASSERT_PROBE_STOWED": null, "gcode_macro STOWABLE_PROBE_BEGIN_BATCH": null, "gcode_macro STOWABLE_PROBE_END_BATCH": null, "gcode_macro DEPLOY_PROBE": null, "gcode_macro STOW_PROBE": null, "gcode_macro BED_MESH_CALIBRATE": null, "gcode_macro PROBE_CALIBRATE": null, "gcode_macro PROBE_ACCURACY": null, "probe": null, "firmware_retraction": null, "motion_report": null, "query_endstops": null, "system_stats": null, "manual_probe": null, "toolhead": null}, "response_template": {"method": "process_status_update"}}}'
gcode state: absolute_coord=True absolute_extrude=True base_position=[0.0, 0.0, 0.0, 0.0] last_position=[0.0, 0.0, 0.0, 0.0] homing_position=[0.0, 0.0, 0.0, 0.0] speed_factor=0.016666666666666666 extrude_factor=1.0 speed=25.0
Reactor garbage collection: (1305.421456788, 0.0, 0.0)
Starting Klippy...
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/printer_data/config/printer.cfg', '-l', '/home/pi/printer_data/logs/klippy.log', '-I', '/home/pi/printer_data/comms/klippy.serial', '-a', '/home/pi/printer_data/comms/klippy.sock']
Git version: 'v0.11.0-86-g6026a99a'
CPU: 4 core ?
Python: '3.9.2 (default, Feb 28 2021, 17:03:44) \n[GCC 10.2.1 20210110]'
Start printer at Fri Jan 20 07:05:10 2023 (1674198310.8 22.3)
===== Config file =====
[board_pins manta_m8p_tmc2209]
aliases = 
	
	x_step_pin=PE2,    x_dir_pin=PB4,    x_enable_pin=PC11,   x_uart_pin=PC10,   x_diag_pin=PF3,    x_endstop_pin=PF3,
	y_step_pin=PF12,   y_dir_pin=PF11,   y_enable_pin=PB3,    y_uart_pin=PF13,   y_diag_pin=PF4,    y_endstop_pin=PF4,
	z0_step_pin=PA10,  z0_dir_pin=PD15,  z0_enable_pin=PA15,  z0_uart_pin=PF8,   z0_diag_pin=null,
	z1_step_pin=PD12,  z1_dir_pin=PD11,  z1_enable_pin=PD14,  z1_uart_pin=PD13,  z1_diag_pin=null,
	z2_step_pin=PD10,  z2_dir_pin=PD8,   z2_enable_pin=PD9,   z2_uart_pin=PC7,   z2_diag_pin=null,
	z3_step_pin=PE6,	 z3_dir_pin=PC13,	 z3_enable_pin=PE5,	  z3_uart_pin=PC14,   z3_diag_pin=null,
	e_step_pin=PD7,    e_dir_pin=PD6,    e_enable_pin=PF10,   e_uart_pin=PF9,    e_diag_pin=null,   e_heater_pin=PE3,  e_sensor_pin=PA1,
	stepper_spi_mosi_pin=PA7,  stepper_spi_miso_pin=PA6,  stepper_spi_sclk_pin=PA5,
	
	adxl345_cs_pin=PB15,
	
	bltouch_sensor_pin=PB2,  bltouch_control_pin=PB1,
	probe_pin=PB2,
	
	fan_part_cooling_pin=PE6,
	fan_toolhead_cooling_pin=PE0,
	fan_controller_board_pin=PC12,
	
	heater_bed_heating_pin=PB7,
	heater_bed_sensor_pin=PA0 ,
	
	
	
	EXP1_1=PE9, EXP1_2=PE10,
	EXP1_3=PE11, EXP1_4=PE12,
	EXP1_5=PE13, EXP1_6=PE14,
	EXP1_7=PE15, EXP1_8=PB10,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	
	EXP2_1=PB14, EXP2_2=PB13,
	EXP2_3=PF7, EXP2_4=PB12,
	EXP2_5=PE7, EXP2_6=PB11,
	EXP2_7=PE8, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=PC5

[mcu]
baud = 250000
serial = /dev/serial/by-id/usb-Klipper_stm32g0b1xx_5C00390009504B4633373520-if00

[temperature_sensor Manta_M8P]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[adxl345]
spi_software_mosi_pin = stepper_spi_mosi_pin
spi_software_miso_pin = stepper_spi_miso_pin
spi_software_sclk_pin = stepper_spi_sclk_pin
cs_pin = adxl345_cs_pin

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[temperature_sensor raspberry_pi]
sensor_type = temperature_host

[skew_correction]

[input_shaper]

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]

[force_move]
enable_force_move = True

[respond]

[heater_bed]
heater_pin = heater_bed_heating_pin
sensor_pin = heater_bed_sensor_pin
sensor_type = Generic 3950
min_temp = 0
max_temp = 120
pwm_cycle_time = 0.02
control = pid
pid_kp = 22.2
pid_ki = 1.08
pid_kd = 114

[fan]
pin = fan_part_cooling_pin
shutdown_speed = 1.0

[heater_fan toolhead_cooling_fan]
pin = fan_toolhead_cooling_pin
fan_speed = 1

[controller_fan controller_fan]
pin = fan_controller_board_pin

[printer]
kinematics = corexy
max_velocity = 1000
max_accel = 15000
max_accel_to_decel = 7500
max_z_velocity = 20
max_z_accel = 150
square_corner_velocity = 5

[homing_override]
set_position_z = -5
axes = xyz
gcode = 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_hop = printer["gcode_macro RatOS"].homing_z_hop|float %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	
	M400
	G90
	G0 Z{z_hop} F{z_speed}
	
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
	{% if homing_x == 'endstop' or homing == 'endstops' %}
	G28 X
	{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
	HOME_X_SENSORLESS
	{% else %}
	{ action_raise_error("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
	{% endif %}
	{% set x_homed = True %}
	G0 X{safe_home_x} F{speed}
	{% endif %}
	
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
	{% if homing_y == 'endstop' or homing == 'endstops' %}
	G28 Y
	{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
	HOME_Y_SENSORLESS
	{% else %}
	{ action_raise_error("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
	{% endif %}
	{% set y_homed = True %}
	G0 Y{safe_home_y} F{speed}
	{% endif %}
	
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
	RESPOND MSG="Homing Z"
	{% if x_homed == False or y_homed == False %}
	M118 X and Y must be homed before homing Z
	{% else %}
	{% if z_probe == "stowable" %}
	DEPLOY_PROBE
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_speed}
	STOW_PROBE
	{% else %}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	G28 Z
	G0 Z{z_hop} F{z_speed}
	{% endif %}
	{% endif %}
	{% endif %}

[gcode_macro HOME_X_SENSORLESS]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config["tmc2209 stepper_x"].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config["tmc2209 stepper_y"].run_current}
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro HOME_Y_SENSORLESS]
gcode = 
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	M204 S1000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config["tmc2209 stepper_x"].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config["tmc2209 stepper_y"].run_current}
	
	M204 S{printer.configfile.config.printer.max_accel}

[gcode_macro MAYBE_HOME]
description = Only home unhomed axis
variable_is_kinematic_position_overriden = False
gcode = 
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
	RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
	G28
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
	{% set axes = '' %}
	{% set isHomed = true %}
	{% set axesToHome = '' %}
	{% if params.X is defined %}
	{% set axes = axes ~ 'X ' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% endif %}
	{% if params.Y is defined %}
	{% set axes = axes ~ 'Y ' %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% endif %}
	{% if params.Z is defined %}
	{% set axes = axes ~ 'Z ' %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
	{% set axes = '' %}
	{% if 'x' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'X ' %}
	{% endif %}
	{% if 'y' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Y ' %}
	{% endif %}
	{% if 'z' not in printer.toolhead.homed_axes %}
	{% set isHomed = false %}
	{% set axesToHome = axesToHome ~ 'Z ' %}
	{% endif %}
	{% endif %}
	{% if isHomed is false %}
	M117 Homing {axesToHome}
	RESPOND MSG="Homing {axesToHome}"
	G28 {axesToHome}
	{% else %}
	RESPOND MSG="All requested axes already homed, skipping.."
	{% endif %}
	{% endif %}

[gcode_macro ECHO_RATOS_VARS]
description = Echo RatOS variables to the console.
gcode = 
	{% for var, value in printer["gcode_macro RatOS"].items() %}
	{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro RatOS]
description = RatOS variable storage macro, will echo variables to the console when run.
variable_relative_extrusion = False
variable_force_absolute_position = False
variable_preheat_extruder = True
variable_preheat_extruder_temp = 150
variable_calibrate_bed_mesh = True
variable_nozzle_priming = "primeblob"
variable_nozzle_prime_start_x = "max"
variable_nozzle_prime_start_y = "min"
variable_nozzle_prime_direction = "auto"
variable_filament_unload_length = 130
variable_filament_unload_speed = 5
variable_filament_load_length = 100
variable_filament_load_speed = 10
variable_start_print_park_in = "back"
variable_start_print_park_z_height = 50
variable_start_print_heat_chamber_bed_temp = 115
variable_end_print_park_in = "back"
variable_pause_print_park_in = "back"
variable_macro_travel_speed = 300
variable_macro_z_speed = 10
variable_end_print_park_z_hop = 20
variable_homing = "endstops"
variable_homing_z_hop = 25
variable_sensorless_x_current = 0.6
variable_sensorless_y_current = 0.9
variable_z_probe = "stowable"
variable_safe_home_x = "middle"
variable_safe_home_y = "middle"
gcode = 
	ECHO_RATOS_VARS
variable_stowable_probe_position_preflight = [ 30, 60 ]
variable_stowable_probe_position_side = [  13, 60 ]
variable_stowable_probe_position_dock = [   13, 6.5 ]
variable_stowable_probe_position_exit = [   60, 6.5 ]
variable_stowable_probe_batch_mode_enabled = False
variable_stowable_probe_state = None
variable_homing_x = "endstop"
variable_homing_y = "endstop"

[gcode_macro PAUSE]
description = Pauses the printer
rename_existing = PAUSE_BASE
variable_extrude = 1.5
gcode = 
	SAVE_GCODE_STATE NAME=PAUSE_state
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F{z_speed}
	_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resumes the print if the printer is paused.
rename_existing = RESUME_BASE
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G91
	G1 E{E} F2100
	G90
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description = Cancels the printer
rename_existing = CANCEL_PRINT_BASE
gcode = 
	END_PRINT
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	
	CANCEL_PRINT_BASE

[gcode_macro PRIME_LINE]
description = Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode = 
	SAVE_GCODE_STATE NAME=prime_line_state
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = printer.toolhead.axis_minimum.x + 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M82
	M117 Priming nozzle with prime line..
	RESPOND MSG="Priming nozzle with prime line.."
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.3 F{z_speed}
	
	G92 E0
	
	G1 Y{y_start + (70 * y_factor)} E16 F1200
	
	G1 Y{y_start + (90 * y_factor)} F{speed}
	RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description = Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode = 
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
	{% set x_start = printer.toolhead.axis_minimum.x + 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
	{% set x_start = printer.toolhead.axis_maximum.x - 5 %}
	{% else %}
	{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
	{% set y_start = 5 %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
	{% set y_start = printer.toolhead.axis_maximum.y - 5 %}
	{% set y_factor = -1 %}
	{% else %}
	{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
	{% set y_factor = 1 %}
	{% else %}
	{% set y_factor = -1 %}
	{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
	{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
	{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	G90
	
	M83
	
	G0 Z{z} F{z_speed}
	
	G1 X{x_start} F{speed}
	G1 Y{y_start} F{speed}
	
	G1 Z0.5 F{z_speed}
	
	G1 F60 E20
	
	M106 S102
	
	G1 Z5 F100 E5
	
	G1 F200 Y{y_start + (25 * y_factor)} E1
	
	
	
	G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
	G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
	G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
	G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
	
	M106 S0
	
	G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6
	
	G1 F{speed} Y{y_start + (100 * y_factor)}
	RESTORE_GCODE_STATE NAME=prime_blob_state

[gcode_macro _PARK]
gcode = 
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	
	{% if params.X != '' %}
	{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
	{% set safe_x = params.X|float %}
	{% else %}
	{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% else %}
	{% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	
	{% if params.LOCATION|default('back')|lower == 'back' %}
	{% set y = printer.toolhead.axis_maximum.y - 5 %}
	{% elif params.LOCATION|lower == 'front' %}
	{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
	{% set y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	
	G90
	
	G0 X{safe_x} Y{y} F{speed}

[gcode_macro M600]
description = Executes a color change by pausing the printer an unloading the filament.
gcode = 
	PAUSE
	UNLOAD_FILAMENT
	M117 Please load new filament and resume
	RESPOND MSG="Please load new filament and resume"

[gcode_macro UNLOAD_FILAMENT]
description = Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=unload_state
	G91
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	M117 Unloading filament...
	
	G0 E10 F300
	
	G0 E-5 F3600
	
	G4 P3000
	
	G0 E5 F3600
	
	G0 E-15 F3600
	
	G0 E-{unload_length} F{unload_speed}
	M117 Filament unloaded!
	RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
	RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description = Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode = 
	SAVE_GCODE_STATE NAME=load_state
	G91
	
	{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
	M117 Heating...
	M104 S{params.TEMP|default(220, true)}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
	{% endif %}
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}
	M117 Loading filament...
	
	G0 E{load_length} F{load_speed}
	
	G4 P1000
	
	G0 E40 F100
	
	M400
	M117 Filament loaded!
	RESPOND MSG="Filament loaded!"
	RESTORE_GCODE_STATE NAME=load_state

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description = FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode = 
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro START_PRINT]
description = Start print procedure, use this in your Slicer.
gcode = 
	CLEAR_PAUSE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	
	G21
	
	G90
	
	M82
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	
	_START_PRINT_AFTER_HEATING_BED
	
	_START_PRINT_BED_MESH
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_START_PRINT_PARK
	
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	
	_START_PRINT_AFTER_HEATING_EXTRUDER
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
	M83
	{% else %}
	M82
	{% endif %}
	G92 E0

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode = 
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
	M117 Pre-heating extruder...
	
	
	M104 S150
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM=150
	{% endif %}
	M117 Adjusting for tilt...
	
	Z_TILT_ADJUST
	M117 Rehoming after tilt adjustment...
	
	G28 Z

[gcode_macro _START_PRINT_BED_MESH]
gcode = 
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
	BED_MESH_CALIBRATE PROFILE=ratos
	{% endif %}
	BED_MESH_PROFILE LOAD=ratos

[gcode_macro _START_PRINT_PARK]
gcode = 
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x}
	G0 Z{z} F{zSpeed}

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode = 
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
	PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
	PRIME_BLOB
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description = Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode = 
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	G0 Z{z} F{zSpeed}
	M84
	M117 Heating chamber...
	RESPOND MSG="Heating chamber..."
	M140 S{params.BED_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
	MAYBE_HOME
	{% endif %}

[gcode_macro END_PRINT]
description = End print procedure, use this in your Slicer.
gcode = 
	SAVE_GCODE_STATE NAME=end_print_state
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_PARK
	
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
	SET_SKEW CLEAR=1
	{% endif %}
	
	M84
	
	M107
	M117 Done :)
	RESPOND MSG="Done :)"
	RESTORE_GCODE_STATE NAME=end_print_state

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode = 
	RESPOND MSG="Cleaning up..."

[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode = 
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 20.0) %}
	{% set z_safe = 20.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	G91
	
	G1 E-2 F3600
	
	G0 Z{z_safe} F3600
	
	G1 E-2 F3600

[gcode_macro _END_PRINT_PARK]
gcode = 
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_shell_command generate_shaper_graph_x]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-x.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_shaper_graph_y]
command = /home/pi/printer_data/config/RatOS/scripts/generate-shaper-graph-y.sh
timeout = 60.
verbose = True

[gcode_shell_command generate_belt_tension_graph]
command = /home/pi/printer_data/config/RatOS/scripts/generate-belt-tension-graph.sh
timeout = 90.
verbose = True

[gcode_shell_command compile_binaries]
command = /home/pi/printer_data/config/RatOS/scripts/compile-binaries.sh
timeout = 600.

[gcode_shell_command change_hostname]
command = /home/pi/printer_data/config/RatOS/scripts/change-hostname.sh
timeout = 10.

[gcode_shell_command delete_and_restore_printer_data_dirs]
command = /home/pi/printer_data/config/RatOS/scripts/delete-and-restore-printer-data.sh
timeout = 10.

[gcode_macro DELETE_AND_RESTORE_PRINTER_DATA_DIRS]
gcode = 
	RUN_SHELL_COMMAND CMD=delete_and_restore_printer_data_dirs

[gcode_macro GENERATE_SHAPER_GRAPHS]
description = Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode = 
	{% if params.AXIS is defined %}
	{% if params.AXIS|lower == 'x' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
	{% elif params.AXIS|lower == 'y' %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
	{% else %}
	{action_raise_error("Unknown axis specified. Expected X or Y.")}
	{% endif %}
	{% else %}
	MAYBE_HOME
	TEST_RESONANCES AXIS=X
	TEST_RESONANCES AXIS=Y
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
	RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
	RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
	{% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description = Generates resonance graph used to ensure belts are equally tensioned.
gcode = 
	TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
	TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
	RUN_SHELL_COMMAND CMD=generate_belt_tension_graph

[gcode_macro COMPILE_FIRMWARE]
description = Compiles firmware with currently installed klipper version for all supported RatOS boards. Note: this may take up to 10 minutes.
gcode = 
	RESPOND MSG="Compiling binaries.. This can take up to 10 minutes. Please do not turn off your Raspberry Pi!"
	RUN_SHELL_COMMAND CMD=compile_binaries
	RESPOND MSG="Firmware binaries compiled successfully! You can find them in the firmware_binaries folder in the machine tab!"

[gcode_macro CHANGE_HOSTNAME]
description = Change the hostname of your Raspberry Pi.
gcode = 
	{% if params.HOSTNAME is not defined %}
	RESPOND MSG='You have to specify a new hostname with the HOSTNAME parameter. Ex: CHANGE_HOSTNAME HOSTNAME="MY_NEW_HOSTNAME"'
	RESPOND MSG="Please note: RFCs mandate that a hostname's labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen. Hostname labels cannot begin or end with a hyphen. No other symbols, punctuation characters, or blank spaces are permitted."
	{% else %}
	RUN_SHELL_COMMAND CMD=change_hostname PARAMS={params.HOSTNAME}
	{% endif %}

[gcode_macro Z_TILT_ADJUST]
rename_existing = Z_TILT_ADJUST_ORIG
gcode = 
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	DEPLOY_PROBE
	{% endif %}
	Z_TILT_ADJUST_ORIG
	{% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
	STOW_PROBE
	{% endif %}

[stepper_x]
step_pin = x_step_pin
dir_pin = x_dir_pin
enable_pin = !x_enable_pin
rotation_distance = 40
microsteps = 64
homing_speed = 50
homing_retract_dist = 5.0
position_max = 300
position_endstop = 0
endstop_pin = ^x_endstop_pin

[stepper_y]
step_pin = y_step_pin
dir_pin = y_dir_pin
enable_pin = !y_enable_pin
rotation_distance = 40
microsteps = 64
homing_speed = 50
homing_retract_dist = 5.0
position_max = 300
position_endstop = 300
endstop_pin = ^y_endstop_pin
homing_positive_dir = true

[stepper_z]
endstop_pin = probe:z_virtual_endstop
step_pin = z0_step_pin
dir_pin = !z0_dir_pin
enable_pin = !z0_enable_pin
rotation_distance = 4
microsteps = 64
position_min = -5
homing_speed = 10
position_max = 300

[stepper_z1]
step_pin = z1_step_pin
dir_pin = !z1_dir_pin
enable_pin = !z1_enable_pin
rotation_distance = 4
microsteps = 64

[stepper_z2]
step_pin = z2_step_pin
dir_pin = !z2_dir_pin
enable_pin = !z2_enable_pin
rotation_distance = 4
microsteps = 64

[extruder]
step_pin = e_step_pin
dir_pin = !e_dir_pin
enable_pin = !e_enable_pin
microsteps = 16
rotation_distance = 22.67895
gear_ratio = 50:8
full_steps_per_rotation = 200
max_extrude_only_distance = 200
max_extrude_only_velocity = 75.0
max_extrude_only_accel = 1500
filament_diameter = 1.750
nozzle_diameter = 0.4
heater_pin = e_heater_pin
sensor_type = ATC Semitec 104GT-2
sensor_pin = e_sensor_pin
min_extrude_temp = 170
min_temp = 0
max_temp = 285
pressure_advance = 0.03
control = pid
pid_kp = 28.413
pid_ki = 1.334
pid_kd = 151.300

[bed_mesh]
speed = 300
horizontal_move_z = 5
mesh_min = 20,20
mesh_max = 265,260
probe_count = 7,7
fade_start = 1.0
fade_end = 10.0
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = .2

[z_tilt]
speed = 300
z_positions = 
	0,0
	150,300
	300,0
points = 
	60,60
	185,270
	260,60
horizontal_move_z = 20
retries = 10
retry_tolerance = 0.02

[tmc2209 stepper_x]
stealthchop_threshold = 0
interpolate = False
uart_pin = x_uart_pin
run_current = 1.6
driver_tbl = 2
driver_toff = 3
driver_hend = 0
driver_hstrt = 6

[tmc2209 stepper_y]
stealthchop_threshold = 0
interpolate = False
uart_pin = y_uart_pin
run_current = 1.6
driver_tbl = 2
driver_toff = 3
driver_hend = 0
driver_hstrt = 6

[tmc2209 extruder]
uart_pin = e_uart_pin
run_current = 0.35
stealthchop_threshold = 0
interpolate = True

[tmc2209 stepper_z]
stealthchop_threshold = 0
interpolate = False
uart_pin = z0_uart_pin
run_current = 1.6
driver_tbl = 2
driver_toff = 3
driver_hend = 0
driver_hstrt = 6

[tmc2209 stepper_z1]
stealthchop_threshold = 0
interpolate = False
uart_pin = z1_uart_pin
run_current = 1.6
driver_tbl = 2
driver_toff = 3
driver_hend = 0
driver_hstrt = 6

[tmc2209 stepper_z2]
stealthchop_threshold = 0
interpolate = False
uart_pin = z2_uart_pin
run_current = 1.6
driver_tbl = 2
driver_toff = 3
driver_hend = 0
driver_hstrt = 6

[gcode_macro _ASSERT_PROBE_STATE]
description = ensures probe is in a known state; QUERY_PROBE must have been called before this macro!
gcode = 
	
	
	
	{% set last_query_state = "stowed" if printer.probe.last_query == 1 else "deployed" %}
	
	{% if params.MUST_BE != last_query_state %}
	{ action_raise_error("expected probe state to be {} but is {} ({})".format(params.MUST_BE, last_query_state, printer.probe.last_query)) }
	{% else %}
	
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_state VALUE="'{ last_query_state }'"
	{% endif %}

[gcode_macro ASSERT_PROBE_DEPLOYED]
description = error if probe not deployed
gcode = 
	M400
	G4 P100
	
	QUERY_PROBE
	_ASSERT_PROBE_STATE MUST_BE=deployed

[gcode_macro ASSERT_PROBE_STOWED]
description = error if probe not stowed
gcode = 
	M400
	G4 P100
	
	QUERY_PROBE
	_ASSERT_PROBE_STATE MUST_BE=stowed

[gcode_macro STOWABLE_PROBE_BEGIN_BATCH]
description = Begin stowable probe batch mode
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_batch_mode_enabled VALUE=True
	RESPOND TYPE=command MSG="Probe batch mode enabled"

[gcode_macro STOWABLE_PROBE_END_BATCH]
description = End stowable probe batch mode and stow probe
gcode = 
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_batch_mode_enabled VALUE=False
	RESPOND TYPE=command MSG="Probe batch mode disabled"
	STOW_PROBE

[gcode_macro DEPLOY_PROBE]
description = Deploy a stowable probe
gcode = 
	{% set RatOS = printer["gcode_macro RatOS"] %}
	{% set speed = RatOS.macro_travel_speed * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	
	{% if RatOS.stowable_probe_batch_mode_enabled and RatOS.stowable_probe_state == "deployed" %}
	RESPOND TYPE=command MSG="Probe batch mode enabled: already deployed"
	{% else %}
	RESPOND TYPE=command MSG="Deploying probe"
	
	ASSERT_PROBE_STOWED
	
	G90
	
	G0 Z{ RatOS.homing_z_hop } F{z_speed}
	
	G0 X{ RatOS.stowable_probe_position_preflight[0] } Y{ RatOS.stowable_probe_position_preflight[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_side[0] } Y{ RatOS.stowable_probe_position_side[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_dock[0] } Y{ RatOS.stowable_probe_position_dock[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_exit[0] } Y{ RatOS.stowable_probe_position_exit[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_preflight[0] } Y{ RatOS.stowable_probe_position_preflight[1] } F{ speed }
	
	ASSERT_PROBE_DEPLOYED
	
	{% endif %}

[gcode_macro STOW_PROBE]
description = Stow a stowable probe
gcode = 
	{% set RatOS = printer["gcode_macro RatOS"] %}
	{% set speed = RatOS.macro_travel_speed * 60 %}
	
	{% if RatOS.stowable_probe_batch_mode_enabled %}
	RESPOND TYPE=command MSG="Probe batch mode enabled: not stowing"
	{% else %}
	RESPOND TYPE=command MSG="Stowing probe"
	
	ASSERT_PROBE_DEPLOYED
	
	G90
	
	G0 Z{ RatOS.homing_z_hop } F3000
	
	G0 X{ RatOS.stowable_probe_position_preflight[0] } Y{ RatOS.stowable_probe_position_preflight[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_exit[0] } Y{ RatOS.stowable_probe_position_exit[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_dock[0] } Y{ RatOS.stowable_probe_position_dock[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_side[0] } Y{ RatOS.stowable_probe_position_side[1] } F{ speed }
	
	G0 X{ RatOS.stowable_probe_position_preflight[0] } Y{ RatOS.stowable_probe_position_preflight[1] } F{ speed }
	
	ASSERT_PROBE_STOWED
	{% endif %}

[gcode_macro BED_MESH_CALIBRATE]
rename_existing = BED_MESH_CALIBRATE_ORIG
gcode = 
	{% set args = [] %}
	{% for p in params %}
	{% set tmp = args.append('%s=%s' % (p, params[p])) %}
	{% endfor %}
	DEPLOY_PROBE
	BED_MESH_CALIBRATE_ORIG {args|join(' ')}
	STOW_PROBE

[gcode_macro PROBE_CALIBRATE]
rename_existing = PROBE_CALIBRATE_ORIG
gcode = 
	{% set args = [] %}
	{% for p in params %}
	{% set tmp = args.append('%s=%s' % (p, params[p])) %}
	{% endfor %}
	{% set RatOS = printer["gcode_macro RatOS"] %}
	{% set speed = RatOS.macro_travel_speed * 60 %}
	DEPLOY_PROBE
	G90
	G0 X{ printer.toolhead.axis_maximum.x/2 } Y{ printer.toolhead.axis_maximum.y/2 } F{ speed }
	PROBE_CALIBRATE_ORIG {args|join(' ')}
	SAVE_GCODE_STATE name=probe_calibrate
	STOW_PROBE
	RESTORE_GCODE_STATE name=probe_calibrate MOVE=1 MOVE_SPEED={RatOS.macro_travel_speed|float}

[gcode_macro PROBE_ACCURACY]
rename_existing = PROBE_ACCURACY_ORIG
gcode = 
	{% set args = [] %}
	{% for p in params %}
	{% set tmp = args.append('%s=%s' % (p, params[p])) %}
	{% endfor %}
	ASSERT_PROBE_DEPLOYED
	PROBE_ACCURACY_ORIG {args|join(' ')}

[probe]
pin = ^probe_pin
x_offset = -26.96
y_offset = -25.4
speed = 5
lift_speed = 15
samples = 4
sample_retract_dist = 1.0
z_offset = 0.0

[firmware_retraction]
retract_speed = 60
unretract_extra_length = 0
unretract_speed = 60
retract_length = 0.5
=======================
Extruder max_extrude_ratio=0.266081
mcu 'mcu': Starting serial connect
Loaded MCU 'mcu' 105 commands (v0.11.0-62-gf1203d56 / gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.35.2-2+14+b2) 2.35.2)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1_PA9_PA10=PA9,PA10 BUS_PINS_i2c1_PB6_PB7=PB6,PB7 BUS_PINS_i2c1_PB8_PB9=PB8,PB9 BUS_PINS_i2c2_PB10_PB11=PB10,PB11 BUS_PINS_i2c2_PB13_PB14=PB13,PB14 BUS_PINS_i2c3_PB3_PB4=PB3,PB4 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi2a=PC2,PC3,PB10 BUS_PINS_spi3=PB4,PB5,PB3 CLOCK_FREQ=64000000 MCU=stm32g0b1xx PWM_MAX=255 RESERVE_PINS_USB=PA11,PA12 RESERVE_PINS_crystal=PF0,PF1 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
mcu_temperature 'mcu' nominal base=-268.840580 slope=1305.652174
Sending MCU 'mcu' printer configuration...
Configured MCU 'mcu' (1024 moves)
Starting heater checks for heater_bed
bed_mesh: generated points
Index |  Tool Adjusted  |   Probe
  0   | (47.0, 45.4)    | (20.0, 20.0)
  1   | (87.8, 45.4)    | (60.8, 20.0)
  2   | (128.6, 45.4)   | (101.7, 20.0)
  3   | (169.5, 45.4)   | (142.5, 20.0)
  4   | (210.3, 45.4)   | (183.3, 20.0)
  5   | (251.1, 45.4)   | (224.1, 20.0)
  6   | (291.9, 45.4)   | (265.0, 20.0)
  7   | (291.9, 85.4)   | (265.0, 60.0)
  8   | (251.1, 85.4)   | (224.2, 60.0)
  9   | (210.3, 85.4)   | (183.3, 60.0)
  10  | (169.5, 85.4)   | (142.5, 60.0)
  11  | (128.6, 85.4)   | (101.7, 60.0)
  12  | (87.8, 85.4)    | (60.8, 60.0)
  13  | (47.0, 85.4)    | (20.0, 60.0)
  14  | (47.0, 125.4)   | (20.0, 100.0)
  15  | (87.8, 125.4)   | (60.8, 100.0)
  16  | (128.6, 125.4)  | (101.7, 100.0)
  17  | (169.5, 125.4)  | (142.5, 100.0)
  18  | (210.3, 125.4)  | (183.3, 100.0)
  19  | (251.1, 125.4)  | (224.1, 100.0)
  20  | (291.9, 125.4)  | (265.0, 100.0)
  21  | (291.9, 165.4)  | (265.0, 140.0)
  22  | (251.1, 165.4)  | (224.2, 140.0)
  23  | (210.3, 165.4)  | (183.3, 140.0)
  24  | (169.5, 165.4)  | (142.5, 140.0)
  25  | (128.6, 165.4)  | (101.7, 140.0)
  26  | (87.8, 165.4)   | (60.8, 140.0)
  27  | (47.0, 165.4)   | (20.0, 140.0)
  28  | (47.0, 205.4)   | (20.0, 180.0)
  29  | (87.8, 205.4)   | (60.8, 180.0)
  30  | (128.6, 205.4)  | (101.7, 180.0)
  31  | (169.5, 205.4)  | (142.5, 180.0)
  32  | (210.3, 205.4)  | (183.3, 180.0)
  33  | (251.1, 205.4)  | (224.1, 180.0)
  34  | (291.9, 205.4)  | (265.0, 180.0)
  35  | (291.9, 245.4)  | (265.0, 220.0)
  36  | (251.1, 245.4)  | (224.2, 220.0)
  37  | (210.3, 245.4)  | (183.3, 220.0)
  38  | (169.5, 245.4)  | (142.5, 220.0)
  39  | (128.6, 245.4)  | (101.7, 220.0)
  40  | (87.8, 245.4)   | (60.8, 220.0)
  41  | (47.0, 245.4)   | (20.0, 220.0)
  42  | (47.0, 285.4)   | (20.0, 260.0)
  43  | (87.8, 285.4)   | (60.8, 260.0)
  44  | (128.6, 285.4)  | (101.7, 260.0)
  45  | (169.5, 285.4)  | (142.5, 260.0)
  46  | (210.3, 285.4)  | (183.3, 260.0)
  47  | (251.1, 285.4)  | (224.1, 260.0)
  48  | (291.9, 285.4)  | (265.0, 260.0)
TMC stepper_x failed to init: Unable to read tmc uart 'stepper_x' register IFCNT
TMC extruder failed to init: Unable to read tmc uart 'extruder' register IFCNT
TMC stepper_z failed to init: Unable to read tmc uart 'stepper_z' register IFCNT
TMC stepper_z1 failed to init: Unable to read tmc uart 'stepper_z1' register IFCNT
TMC stepper_z2 failed to init: Unable to read tmc uart 'stepper_z2' register IFCNT
Unable to obtain tmc stepper_x phase
Unable to obtain tmc stepper_z phase
Unable to obtain tmc stepper_z1 phase
Unable to obtain tmc stepper_z2 phase
Starting heater checks for extruder
Unable to obtain tmc extruder phase
Stats 28.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=2280 bytes_read=5242 bytes_retransmit=9 bytes_invalid=0 send_seq=214 receive_seq=214 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=64002785 Manta_M8P: temp=0.0 raspberry_pi: temp=47.4  heater_bed: target=0 temp=0.0 pwm=0.000 sysload=2.82 cputime=5.451 memavail=632784 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=0.0 pwm=0.000
webhooks client 281473189169232: New connection
Stats 29.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=2286 bytes_read=5390 bytes_retransmit=9 bytes_invalid=0 send_seq=215 receive_seq=215 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=64001138 Manta_M8P: temp=34.4 raspberry_pi: temp=47.5  heater_bed: target=0 temp=24.2 pwm=0.000 sysload=2.82 cputime=5.470 memavail=623892 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.3 pwm=0.000
webhooks client 281473189169232: Client info {'program': 'Moonraker', 'version': 'v0.7.1-809-gc964e68'}
webhooks: registering remote method 'shutdown_machine' for connection id: 281473189169232
webhooks: registering remote method 'reboot_machine' for connection id: 281473189169232
webhooks: registering remote method 'pause_job_queue' for connection id: 281473189169232
webhooks: registering remote method 'start_job_queue' for connection id: 281473189169232
Stats 30.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=2292 bytes_read=5538 bytes_retransmit=9 bytes_invalid=0 send_seq=216 receive_seq=216 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=64000936 Manta_M8P: temp=35.2 raspberry_pi: temp=47.1  heater_bed: target=0 temp=24.1 pwm=0.000 sysload=2.83 cputime=5.523 memavail=616652 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.2 pwm=0.000
Stats 31.4: gcodein=0  mcu: mcu_awake=0.018 mcu_task_avg=0.000018 mcu_task_stddev=0.000023 bytes_write=2298 bytes_read=5730 bytes_retransmit=9 bytes_invalid=0 send_seq=217 receive_seq=217 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=64000758 Manta_M8P: temp=36.2 raspberry_pi: temp=47.6  heater_bed: target=0 temp=24.3 pwm=0.000 sysload=2.83 cputime=5.543 memavail=608596 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.1 pwm=0.000
Stats 32.4: gcodein=0  mcu: mcu_awake=0.018 mcu_task_avg=0.000018 mcu_task_stddev=0.000023 bytes_write=2304 bytes_read=5893 bytes_retransmit=9 bytes_invalid=0 send_seq=218 receive_seq=218 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=64000900 Manta_M8P: temp=36.8 raspberry_pi: temp=46.6  heater_bed: target=0 temp=24.3 pwm=0.000 sysload=2.83 cputime=5.595 memavail=620264 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.1 pwm=0.000
Stats 33.4: gcodein=0  mcu: mcu_awake=0.018 mcu_task_avg=0.000018 mcu_task_stddev=0.000023 bytes_write=2310 bytes_read=6041 bytes_retransmit=9 bytes_invalid=0 send_seq=219 receive_seq=219 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=64001121 Manta_M8P: temp=36.9 raspberry_pi: temp=46.2  heater_bed: target=0 temp=24.1 pwm=0.000 sysload=2.83 cputime=5.616 memavail=614308 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.1 pwm=0.000
Stats 34.4: gcodein=0  mcu: mcu_awake=0.018 mcu_task_avg=0.000018 mcu_task_stddev=0.000023 bytes_write=2316 bytes_read=6218 bytes_retransmit=9 bytes_invalid=0 send_seq=220 receive_seq=220 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=64000917 Manta_M8P: temp=37.4 raspberry_pi: temp=46.5  heater_bed: target=0 temp=24.3 pwm=0.000 sysload=2.83 cputime=5.637 memavail=610016 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.1 pwm=0.000
Stats 35.4: gcodein=0  mcu: mcu_awake=0.018 mcu_task_avg=0.000018 mcu_task_stddev=0.000023 bytes_write=2322 bytes_read=6381 bytes_retransmit=9 bytes_invalid=0 send_seq=221 receive_seq=221 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=64000898 Manta_M8P: temp=37.6 raspberry_pi: temp=44.9  heater_bed: target=0 temp=24.2 pwm=0.000 sysload=2.77 cputime=5.655 memavail=609344 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.2 pwm=0.000
Stats 36.4: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000015 mcu_task_stddev=0.000011 bytes_write=2328 bytes_read=6557 bytes_retransmit=9 bytes_invalid=0 send_seq=222 receive_seq=222 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=64000822 Manta_M8P: temp=38.0 raspberry_pi: temp=43.5  heater_bed: target=0 temp=24.2 pwm=0.000 sysload=2.77 cputime=5.672 memavail=609096 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.9 pwm=0.000
Stats 37.4: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000015 mcu_task_stddev=0.000011 bytes_write=2334 bytes_read=6720 bytes_retransmit=9 bytes_invalid=0 send_seq=223 receive_seq=223 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=64000777 Manta_M8P: temp=38.3 raspberry_pi: temp=43.0  heater_bed: target=0 temp=24.2 pwm=0.000 sysload=2.77 cputime=5.690 memavail=608600 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.2 pwm=0.000
Stats 38.4: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000015 mcu_task_stddev=0.000011 bytes_write=2340 bytes_read=6883 bytes_retransmit=9 bytes_invalid=0 send_seq=224 receive_seq=224 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=64000756 Manta_M8P: temp=38.4 raspberry_pi: temp=42.5  heater_bed: target=0 temp=24.4 pwm=0.000 sysload=2.77 cputime=5.707 memavail=608128 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.9 pwm=0.000
Stats 39.4: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000015 mcu_task_stddev=0.000011 bytes_write=2346 bytes_read=7045 bytes_retransmit=9 bytes_invalid=0 send_seq=225 receive_seq=225 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=64000739 Manta_M8P: temp=38.6 raspberry_pi: temp=43.2  heater_bed: target=0 temp=24.0 pwm=0.000 sysload=2.77 cputime=5.724 memavail=608132 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.1 pwm=0.000
Stats 40.4: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000015 mcu_task_stddev=0.000011 bytes_write=2352 bytes_read=7208 bytes_retransmit=9 bytes_invalid=0 send_seq=226 receive_seq=226 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=64000723 Manta_M8P: temp=38.8 raspberry_pi: temp=43.1  heater_bed: target=0 temp=24.1 pwm=0.000 sysload=2.55 cputime=5.742 memavail=608132 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.0 pwm=0.000
Stats 41.4: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000015 mcu_task_stddev=0.000011 bytes_write=2358 bytes_read=7371 bytes_retransmit=9 bytes_invalid=0 send_seq=227 receive_seq=227 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=64000719 Manta_M8P: temp=38.7 raspberry_pi: temp=42.7  heater_bed: target=0 temp=24.3 pwm=0.000 sysload=2.55 cputime=5.759 memavail=608136 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.0 pwm=0.000
Stats 42.4: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000015 mcu_task_stddev=0.000011 bytes_write=2364 bytes_read=7547 bytes_retransmit=9 bytes_invalid=0 send_seq=228 receive_seq=228 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=64000717 Manta_M8P: temp=38.9 raspberry_pi: temp=42.6  heater_bed: target=0 temp=24.2 pwm=0.000 sysload=2.55 cputime=5.777 memavail=608136 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.2 pwm=0.000
Stats 43.4: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000015 mcu_task_stddev=0.000011 bytes_write=2370 bytes_read=7710 bytes_retransmit=9 bytes_invalid=0 send_seq=229 receive_seq=229 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=64000712 Manta_M8P: temp=39.0 raspberry_pi: temp=42.6  heater_bed: target=0 temp=24.2 pwm=0.000 sysload=2.55 cputime=5.794 memavail=608136 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.0 pwm=0.000
Stats 44.4: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000015 mcu_task_stddev=0.000011 bytes_write=2376 bytes_read=7873 bytes_retransmit=9 bytes_invalid=0 send_seq=230 receive_seq=230 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=64000715 Manta_M8P: temp=39.3 raspberry_pi: temp=42.3  heater_bed: target=0 temp=24.1 pwm=0.000 sysload=2.55 cputime=5.812 memavail=607888 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.1 pwm=0.000
Stats 45.4: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000015 mcu_task_stddev=0.000011 bytes_write=2382 bytes_read=8035 bytes_retransmit=9 bytes_invalid=0 send_seq=231 receive_seq=231 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=64000724 Manta_M8P: temp=39.2 raspberry_pi: temp=42.5  heater_bed: target=0 temp=24.3 pwm=0.000 sysload=2.34 cputime=5.829 memavail=615204 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.0 pwm=0.000
Stats 46.4: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000015 mcu_task_stddev=0.000011 bytes_write=2388 bytes_read=8198 bytes_retransmit=9 bytes_invalid=0 send_seq=232 receive_seq=232 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=64000725 Manta_M8P: temp=39.2 raspberry_pi: temp=42.7  heater_bed: target=0 temp=24.1 pwm=0.000 sysload=2.34 cputime=5.845 memavail=614956 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.2 pwm=0.000
Stats 47.4: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000015 mcu_task_stddev=0.000011 bytes_write=2394 bytes_read=8375 bytes_retransmit=9 bytes_invalid=0 send_seq=233 receive_seq=233 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=64000727 Manta_M8P: temp=39.5 raspberry_pi: temp=42.0  heater_bed: target=0 temp=24.2 pwm=0.000 sysload=2.34 cputime=5.863 memavail=614956 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.1 pwm=0.000
Stats 48.4: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000015 mcu_task_stddev=0.000011 bytes_write=2400 bytes_read=8552 bytes_retransmit=9 bytes_invalid=0 send_seq=234 receive_seq=234 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=64000728 Manta_M8P: temp=39.7 raspberry_pi: temp=42.5  heater_bed: target=0 temp=24.2 pwm=0.000 sysload=2.34 cputime=5.880 memavail=614452 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.1 pwm=0.000
Stats 49.4: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000015 mcu_task_stddev=0.000011 bytes_write=2406 bytes_read=8715 bytes_retransmit=9 bytes_invalid=0 send_seq=235 receive_seq=235 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=64000732 Manta_M8P: temp=39.8 raspberry_pi: temp=42.6  heater_bed: target=0 temp=24.2 pwm=0.000 sysload=2.34 cputime=5.898 memavail=614452 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.2 pwm=0.000
Stats 50.4: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000015 mcu_task_stddev=0.000011 bytes_write=2412 bytes_read=8863 bytes_retransmit=9 bytes_invalid=0 send_seq=236 receive_seq=236 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=64000736 Manta_M8P: temp=39.7 raspberry_pi: temp=42.9  heater_bed: target=0 temp=24.2 pwm=0.000 sysload=2.15 cputime=5.915 memavail=614452 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.1 pwm=0.000
Stats 51.4: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000015 mcu_task_stddev=0.000011 bytes_write=2424 bytes_read=9056 bytes_retransmit=9 bytes_invalid=0 send_seq=238 receive_seq=238 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=64000738 Manta_M8P: temp=39.9 raspberry_pi: temp=42.7  heater_bed: target=0 temp=24.0 pwm=0.000 sysload=2.15 cputime=5.933 memavail=614452 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.0 pwm=0.000
Stats 52.4: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000015 mcu_task_stddev=0.000011 bytes_write=2430 bytes_read=9233 bytes_retransmit=9 bytes_invalid=0 send_seq=239 receive_seq=239 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=64000739 Manta_M8P: temp=39.9 raspberry_pi: temp=42.7  heater_bed: target=0 temp=24.1 pwm=0.000 sysload=2.15 cputime=5.951 memavail=614452 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.1 pwm=0.000
Stats 53.4: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000015 mcu_task_stddev=0.000011 bytes_write=2436 bytes_read=9381 bytes_retransmit=9 bytes_invalid=0 send_seq=240 receive_seq=240 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=64000739 Manta_M8P: temp=40.0 raspberry_pi: temp=42.9  heater_bed: target=0 temp=24.0 pwm=0.000 sysload=2.15 cputime=5.967 memavail=614204 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.1 pwm=0.000
Stats 54.4: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000015 mcu_task_stddev=0.000011 bytes_write=2442 bytes_read=9558 bytes_retransmit=9 bytes_invalid=0 send_seq=241 receive_seq=241 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=64000740 Manta_M8P: temp=40.0 raspberry_pi: temp=42.8  heater_bed: target=0 temp=24.3 pwm=0.000 sysload=2.15 cputime=5.984 memavail=614400 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.1 pwm=0.000
Stats 55.4: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000015 mcu_task_stddev=0.000011 bytes_write=2448 bytes_read=9721 bytes_retransmit=9 bytes_invalid=0 send_seq=242 receive_seq=242 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=64000742 Manta_M8P: temp=40.2 raspberry_pi: temp=42.7  heater_bed: target=0 temp=24.2 pwm=0.000 sysload=1.98 cputime=6.001 memavail=614180 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.2 pwm=0.000
